/* IMPORTANT
 * This snapshot file is auto-generated, but designed for humans.
 * It should be checked into source control and tracked carefully.
 * Re-generate by setting TAP_SNAPSHOT=1 and running tests.
 * Make sure to inspect the output below.  Do not ignore changes!
 */
'use strict'
exports[`test/node.js TAP basic instantiation > just a lone root node 1`] = `
Node {
  "children": Map {},
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {},
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {},
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": undefined,
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree with meta > add new meta under prod 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "meta": undefined,
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
            },
          },
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "asdf" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "meta": undefined,
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
            },
          },
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "asdf" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "newMeta",
    },
    "node_modules/prod/node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
      "meta": undefined,
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": Shrinkwrap {
    "data": Object {
      "dependencies": Object {},
      "lockfileVersion": 2,
      "packages": Object {},
    },
    "filename": null,
    "hiddenLockfile": false,
    "indent": 2,
    "loadedFromDisk": false,
    "path": "/home/user/projects/root",
    "shrinkwrapOnly": false,
    "type": null,
    "yarnLock": null,
  },
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree with meta > initial load with some deps 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "bundled" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "bundled" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "meta",
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": Shrinkwrap {
    "data": Object {
      "dependencies": Object {},
      "lockfileVersion": 2,
      "packages": Object {},
    },
    "filename": null,
    "hiddenLockfile": false,
    "indent": 2,
    "loadedFromDisk": false,
    "path": "/home/user/projects/root",
    "shrinkwrapOnly": false,
    "type": null,
    "yarnLock": null,
  },
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree with meta > move meta to top level, update stuff 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": Shrinkwrap {
    "data": Object {
      "dependencies": Object {},
      "lockfileVersion": 2,
      "packages": Object {},
    },
    "filename": null,
    "hiddenLockfile": false,
    "indent": 2,
    "loadedFromDisk": false,
    "path": "/home/user/projects/root",
    "shrinkwrapOnly": false,
    "type": null,
    "yarnLock": null,
  },
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree with meta > move new meta to top level 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": Shrinkwrap {
    "data": Object {
      "dependencies": Object {},
      "lockfileVersion": 2,
      "packages": Object {},
    },
    "filename": null,
    "hiddenLockfile": false,
    "indent": 2,
    "loadedFromDisk": false,
    "path": "/home/user/projects/root",
    "shrinkwrapOnly": false,
    "type": null,
    "yarnLock": null,
  },
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree with meta > move new meta to top level second time (no-op) 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": Shrinkwrap {
    "data": Object {
      "dependencies": Object {},
      "lockfileVersion": 2,
      "packages": Object {},
    },
    "filename": null,
    "hiddenLockfile": false,
    "indent": 2,
    "loadedFromDisk": false,
    "path": "/home/user/projects/root",
    "shrinkwrapOnly": false,
    "type": null,
    "yarnLock": null,
  },
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree without meta > add new meta under prod 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "meta": undefined,
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
            },
          },
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "asdf" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "meta": undefined,
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
            },
          },
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "asdf" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "newMeta",
    },
    "node_modules/prod/node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
      "meta": undefined,
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": undefined,
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree without meta > initial load with some deps 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "bundled" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {
            Edge {},
            Edge {},
          },
          "edgesOut": Map {
            "bundled" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "meta": undefined,
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "meta",
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": undefined,
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree without meta > move meta to top level, update stuff 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "bundled" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": undefined,
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree without meta > move new meta to top level 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": undefined,
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP testing with dep tree without meta > move new meta to top level second time (no-op) 1`] = `
Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "dev": true,
  "devOptional": true,
  "edgesIn": Set {},
  "edgesOut": Map {
    "optional" => Edge {},
    "overlap" => Edge {},
    "optMissing" => Edge {},
    "prod" => Edge {},
    "bundled" => Edge {},
    "missing" => Edge {},
    "dev" => Edge {},
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
        "peer" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {},
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "meta": undefined,
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "meta": undefined,
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "meta": undefined,
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {
        "meta" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "meta": undefined,
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "meta": undefined,
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "meta": undefined,
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "meta": undefined,
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "meta": undefined,
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "meta": undefined,
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
        },
      },
      "dev": true,
      "devOptional": true,
      "edgesIn": Set {
        Edge {},
        Edge {},
        Edge {},
      },
      "edgesOut": Map {
        "asdf" => Edge {},
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "meta": undefined,
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "meta": undefined,
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > initial child location, pre-move 1`] = `
../../../../path/to/top1/node_modules/child
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > initial child2 location, pre-move 1`] = `
../../../../path/to/top1/node_modules/child/node_modules/child2
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > metadata from root 1`] = `
Object {
  "dependencies": Object {
    "child2": "2",
  },
  "extraneous": true,
  "integrity": "sha512-blortzeyblartzeyfartz",
  "name": "child",
  "resolved": "https://child.com/-/child-1.2.3.tgz",
  "version": "1.2.3",
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > metadata from top1 1`] = `
Object {
  "dependencies": Object {
    "child2": "2",
  },
  "extraneous": true,
  "integrity": "sha512-blortzeyblartzeyfartz",
  "name": "child",
  "resolved": "https://child.com/-/child-1.2.3.tgz",
  "version": "1.2.3",
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new child location 1`] = `
../../../../path/to/top2/node_modules/child
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new child2 location 1`] = `
../../../../path/to/top1/node_modules/child/node_modules/child2
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new top metadata updated 1`] = `
Object {
  "dependencies": Object {
    "child2": "2",
  },
  "extraneous": true,
  "integrity": "sha512-blortzeyblartzeyfartz",
  "name": "child",
  "resolved": "https://child.com/-/child-1.2.3.tgz",
  "version": "1.2.3",
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new top metadata updated 2`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location deleted from root 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location deleted from top1 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location2 deleted from root 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location2 deleted from top1 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > root metadata updated 1`] = `
Object {
  "dependencies": Object {
    "child2": "2",
  },
  "extraneous": true,
  "integrity": "sha512-blortzeyblartzeyfartz",
  "name": "child",
  "resolved": "https://child.com/-/child-1.2.3.tgz",
  "version": "1.2.3",
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > root metadata updated 2`] = `
Object {}
`
