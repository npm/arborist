/* IMPORTANT
 * This snapshot file is auto-generated, but designed for humans.
 * It should be checked into source control and tracked carefully.
 * Re-generate by setting TAP_SNAPSHOT=1 and running tests.
 * Make sure to inspect the output below.  Do not ignore changes!
 */
'use strict'
exports[`test/node.js TAP basic instantiation > just a lone root node 1`] = `
&ref_1 Node {
  "children": Map {},
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {},
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "overrides": &ref_2 OverrideSet {
    "children": Map {
      "foo" => OverrideSet {
        "children": Map {},
        "key": "foo",
        "keySpec": "",
        "name": "foo",
        "parent": <*ref_2>,
        "value": "1",
      },
    },
    "parent": undefined,
  },
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {},
}
`

exports[`test/node.js TAP printable Node extraneous tree > should print human readable representation of node tree 1`] = `
{
name:'printable-node',
version:'1.1.1',
location:'',
path:'/home/user/projects/root',
extraneous:true,
dev:true,
optional:true,
peer:true,
isProjectRoot:true,
error:{code:'ERR', path:'/'},
edgesOut:Map{
'b' =>{prod b@* -> node_modules/b},
'missing' =>{prod missing@* MISSING},
'prod' =>{prod prod@1.x -> node_modules/prod}},
children:Map{
'b' =>{
name:'b',
version:'1.2.3',
location:'node_modules/b',
path:'/home/user/projects/root/node_modules/b',
resolved:'b',
extraneous:true,
dev:true,
optional:true,
peer:true,
edgesIn:Set{{"" prod b@*},{node_modules/prod prod b@*}}},
'c' =>{
name:'c',
location:'node_modules/c',
path:'/home/user/projects/root/node_modules/c',
resolved:'c',
extraneous:true,
dev:true,
optional:true,
peer:true},
'prod' =>{
name:'prod',
version:'1.2.3',
location:'node_modules/prod',
path:'/home/user/projects/root/node_modules/prod',
resolved:'prod',
extraneous:true,
dev:true,
optional:true,
peer:true,
edgesOut:Map{
'b' =>{prod b@* -> node_modules/b},
'meta' =>{prod meta@* MISSING},
'peer' =>{peer peer@* MISSING}},
edgesIn:Set{{"" prod prod@1.x}},
fsChildren:Set{
{
name:'bar',
version:'1.0.0',
location:'node_modules/prod/bar',
path:'/home/user/projects/root/node_modules/prod/bar',
extraneous:true,
dev:true,
optional:true,
peer:true},
{
name:'foo',
version:'1.2.3',
location:'node_modules/prod/foo',
path:'/home/user/projects/root/node_modules/prod/foo',
extraneous:true,
dev:true,
optional:true,
peer:true,
edgesOut:Map{'meta' =>{prod meta@* MISSING}}}}}}}
`

exports[`test/node.js TAP printable Node variations > should match non-extraneous tree representation 1`] = `
{
name:'variations',
version:'1.0.0',
location:'',
path:'/home/user/projects/root',
dev:true,
optional:true,
peer:true,
isProjectRoot:true,
error:{code:'ERR'},
edgesOut:Map{
'a' =>{prod a@^1.0.0 -> node_modules/a},
'b' =>{prod b@^1.0.0 -> node_modules/b}},
fsChildren:Set{
{
name:'c',
version:'1.0.0',
location:'c',
path:'/home/user/projects/root/c',
extraneous:true,
dev:true,
optional:true,
peer:true}},
children:Map{
'a' =>{
name:'a',
version:'1.1.1',
location:'node_modules/a',
path:'/home/user/projects/root/node_modules/a',
dev:true,
optional:true,
peer:true,
bundled:true,
bundler:undefined,
errors:[{code:'ERR'}],
edgesIn:Set{{"" prod a@^1.0.0}}},
'b' => ArboristLink{
name:'b',
packageName:'c',
version:'1.0.0',
location:'node_modules/b',
path:'/home/user/projects/root/node_modules/b',
realpath:'/home/user/projects/root/c',
resolved:'file:../c',
devOptional:true,
errors:[{code:'ERR',
path:'/home/users/projects/root/node_modules/b'}],
edgesIn:Set{{"" prod b@^1.0.0}},
target:{location:'c'}},
'd' => ArboristLink{
name:'d',
packageName:'c',
version:'1.0.0',
location:'node_modules/d',
path:'/home/user/projects/root/node_modules/d',
realpath:'/home/user/projects/root/c',
resolved:'file:../c',
extraneous:true,
dev:true,
optional:true,
peer:true,
target:{location:'c'}}}}
`

exports[`test/node.js TAP set workspaces > should setup edges out for each workspace 1`] = `
&ref_1 Node {
  "children": Map {
    "foo" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/node_modules/foo",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/foo",
      "sourceReference": null,
      "tops": Set {},
    },
    "unknown" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/unknown",
      "name": "unknown",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/node_modules/unknown",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/unknown",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "foo" => Edge {
      "peerConflicted": false,
    },
    "bar" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/workspaces_root/node_modules/foo",
          "peer": true,
          "realpath": "/home/user/projects/workspaces_root/foo",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/foo",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/unknown",
          "name": "unknown",
          "optional": true,
          "path": "/home/user/projects/workspaces_root/node_modules/unknown",
          "peer": true,
          "realpath": "/home/user/projects/workspaces_root/unknown",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "unknown",
      "name": "unknown",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/unknown",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/unknown",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/foo" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/node_modules/foo",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/foo",
      "sourceReference": null,
      "tops": Set {},
    },
    "foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/workspaces_root/node_modules/foo",
          "peer": true,
          "realpath": "/home/user/projects/workspaces_root/foo",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/foo",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/unknown" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/unknown",
      "name": "unknown",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/node_modules/unknown",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/unknown",
      "sourceReference": null,
      "tops": Set {},
    },
    "unknown" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/unknown",
          "name": "unknown",
          "optional": true,
          "path": "/home/user/projects/workspaces_root/node_modules/unknown",
          "peer": true,
          "realpath": "/home/user/projects/workspaces_root/unknown",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "unknown",
      "name": "unknown",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/unknown",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/unknown",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "workspaces_root",
  "optional": true,
  "path": "/home/user/projects/workspaces_root",
  "peer": true,
  "realpath": "/home/user/projects/workspaces_root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/workspaces_root/node_modules/foo",
          "peer": true,
          "realpath": "/home/user/projects/workspaces_root/foo",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/foo",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/unknown",
          "name": "unknown",
          "optional": true,
          "path": "/home/user/projects/workspaces_root/node_modules/unknown",
          "peer": true,
          "realpath": "/home/user/projects/workspaces_root/unknown",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "unknown",
      "name": "unknown",
      "optional": true,
      "path": "/home/user/projects/workspaces_root/unknown",
      "peer": true,
      "realpath": "/home/user/projects/workspaces_root/unknown",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree with meta > add new meta under prod 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "dummy": false,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
              "sourceReference": null,
              "tops": Set {},
            },
          },
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "asdf" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "dummy": false,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
              "sourceReference": null,
              "tops": Set {},
            },
          },
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "asdf" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree with meta > initial load with some deps 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "bundled" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "bundled" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree with meta > move meta to top level, update stuff 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree with meta > move new meta to top level 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta/node_modules/metameta",
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree with meta > move new meta to top level second time (no-op) 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta/node_modules/metameta",
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree without meta > add new meta under prod 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "dummy": false,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
              "sourceReference": null,
              "tops": Set {},
            },
          },
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "asdf" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {
            "metameta" => Link {
              "dev": true,
              "devOptional": true,
              "dummy": false,
              "edgesIn": Set {},
              "edgesOut": Map {},
              "errors": Array [],
              "extraneous": true,
              "fsChildren": Set {},
              "hasShrinkwrap": false,
              "integrity": "metameta",
              "inventory": Inventory {},
              "legacyPeerDeps": false,
              "linksIn": Set {},
              "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
              "name": "metameta",
              "optional": true,
              "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
              "peer": true,
              "realpath": "/home/user/projects/root/node_modules/meta",
              "sourceReference": null,
              "tops": Set {},
            },
          },
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "asdf" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "newMeta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "newMeta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta/node_modules/metameta",
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree without meta > initial load with some deps 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "bundled" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {
        "meta" => Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {
            Edge {
              "peerConflicted": false,
            },
            Edge {
              "peerConflicted": false,
            },
          },
          "edgesOut": Map {
            "bundled" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "meta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/node_modules/meta",
          "name": "meta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
          "resolved": "meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree without meta > move meta to top level, update stuff 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "bundled" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "meta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "meta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree without meta > move new meta to top level 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta/node_modules/metameta",
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP testing with dep tree without meta > move new meta to top level second time (no-op) 1`] = `
&ref_1 Node {
  "children": Map {
    "prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "dev": true,
  "devOptional": true,
  "dummy": false,
  "edgesIn": Set {},
  "edgesOut": Map {
    "prod" => Edge {
      "peerConflicted": false,
    },
    "bundled" => Edge {
      "peerConflicted": false,
    },
    "missing" => Edge {
      "peerConflicted": false,
    },
    "optional" => Edge {
      "peerConflicted": false,
    },
    "optMissing" => Edge {
      "peerConflicted": false,
    },
    "dev" => Edge {
      "peerConflicted": false,
    },
    "overlap" => Edge {
      "peerConflicted": false,
    },
  },
  "errors": Array [],
  "extraneous": true,
  "fsChildren": Set {},
  "hasShrinkwrap": false,
  "integrity": null,
  "inventory": Inventory {
    "" => <*ref_1>,
    "node_modules/prod" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "peer" => Edge {
          "peerConflicted": false,
        },
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {
        Node {
          "children": Map {},
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {
            "meta" => Edge {
              "peerConflicted": false,
            },
          },
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": null,
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/prod/foo",
          "name": "foo",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/prod/foo",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/prod/foo",
          "resolved": null,
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "hasShrinkwrap": false,
      "integrity": "prod",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod",
      "name": "prod",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod",
      "resolved": "prod",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/prod/foo" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/bundled" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "bundled",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/bundled",
      "name": "bundled",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/bundled",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/bundled",
      "resolved": "bundled",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/dev" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "dev",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/dev",
      "name": "dev",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/dev",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/dev",
      "resolved": "dev",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/optional" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "opt",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/optional",
      "name": "optional",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/optional",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/optional",
      "resolved": "opt",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/peer" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "peer",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/peer",
      "name": "peer",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/peer",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/peer",
      "resolved": "peer",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/extraneous" => Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "extraneous",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/extraneous",
      "name": "extraneous",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/extraneous",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/extraneous",
      "resolved": "extraneous",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta/node_modules/metameta" => Link {
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {},
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "metameta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/meta/node_modules/metameta",
      "name": "metameta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "sourceReference": null,
      "tops": Set {},
    },
    "node_modules/meta" => Node {
      "children": Map {
        "metameta" => Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
        Edge {
          "peerConflicted": false,
        },
      },
      "edgesOut": Map {
        "asdf" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": "newMeta",
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {
        Link {
          "dev": true,
          "devOptional": true,
          "dummy": false,
          "edgesIn": Set {},
          "edgesOut": Map {},
          "errors": Array [],
          "extraneous": true,
          "fsChildren": Set {},
          "hasShrinkwrap": false,
          "integrity": "metameta",
          "inventory": Inventory {},
          "legacyPeerDeps": false,
          "linksIn": Set {},
          "location": "node_modules/meta/node_modules/metameta",
          "name": "metameta",
          "optional": true,
          "path": "/home/user/projects/root/node_modules/meta/node_modules/metameta",
          "peer": true,
          "realpath": "/home/user/projects/root/node_modules/meta",
          "sourceReference": null,
          "tops": Set {},
        },
      },
      "location": "node_modules/meta",
      "name": "meta",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/meta",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/meta",
      "resolved": "newMeta",
      "sourceReference": null,
      "tops": Set {},
    },
  },
  "legacyPeerDeps": false,
  "linksIn": Set {},
  "location": "",
  "name": "root",
  "optional": true,
  "path": "/home/user/projects/root",
  "peer": true,
  "realpath": "/home/user/projects/root",
  "resolved": null,
  "sourceReference": null,
  "tops": Set {
    Node {
      "children": Map {},
      "dev": true,
      "devOptional": true,
      "dummy": false,
      "edgesIn": Set {},
      "edgesOut": Map {
        "meta" => Edge {
          "peerConflicted": false,
        },
      },
      "errors": Array [],
      "extraneous": true,
      "fsChildren": Set {},
      "hasShrinkwrap": false,
      "integrity": null,
      "inventory": Inventory {},
      "legacyPeerDeps": false,
      "linksIn": Set {},
      "location": "node_modules/prod/foo",
      "name": "foo",
      "optional": true,
      "path": "/home/user/projects/root/node_modules/prod/foo",
      "peer": true,
      "realpath": "/home/user/projects/root/node_modules/prod/foo",
      "resolved": null,
      "sourceReference": null,
      "tops": Set {},
    },
  },
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > initial child location, pre-move 1`] = `
../../../../path/to/top1/node_modules/child
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > initial child2 location, pre-move 1`] = `
../../../../path/to/top1/node_modules/child/node_modules/child2
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > metadata from root 1`] = `
Object {
  "dependencies": Object {
    "child2": "2",
  },
  "extraneous": true,
  "integrity": "sha512-blortzeyblartzeyfartz",
  "resolved": "https://child.com/-/child-1.2.3.tgz",
  "version": "1.2.3",
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > metadata from top1 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new child location 1`] = `
../../../../path/to/top2/node_modules/child
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new child2 location 1`] = `
../../../../path/to/top2/node_modules/child/node_modules/child2
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new top metadata updated 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > new top metadata updated 2`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location deleted from root 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location deleted from top1 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location2 deleted from root 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > old location2 deleted from top1 1`] = `
Object {}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > root metadata updated 1`] = `
Object {
  "dependencies": Object {
    "child2": "2",
  },
  "extraneous": true,
  "integrity": "sha512-blortzeyblartzeyfartz",
  "resolved": "https://child.com/-/child-1.2.3.tgz",
  "version": "1.2.3",
}
`

exports[`test/node.js TAP update metadata when moving between linked top-of-tree parents > root metadata updated 2`] = `
Object {
  "extraneous": true,
  "integrity": "sha512-a childs child is a kidkid",
  "resolved": "https://child.com/-/child-2.3.4.tgz",
  "version": "2.3.4",
}
`
