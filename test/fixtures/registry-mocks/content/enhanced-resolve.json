{
  "_id": "enhanced-resolve",
  "_rev": "169-f0f6df1d3699dc74e24a23e2d4957029",
  "name": "enhanced-resolve",
  "description": "Offers a async require.resolve function. It's highly configurable.",
  "dist-tags": {
    "latest": "5.3.1",
    "beta": "5.0.0-beta.12"
  },
  "versions": {
    "0.2.0": {
      "name": "enhanced-resolve",
      "version": "0.2.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.8"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.0",
      "dist": {
        "shasum": "dbc461a2bbc5f42d76331e83307504f88565822a",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.0.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.1": {
      "name": "enhanced-resolve",
      "version": "0.2.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.8"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.1",
      "dist": {
        "shasum": "c9c6765fac3255b2f767967d0d2f248fd3117a55",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.1.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.2": {
      "name": "enhanced-resolve",
      "version": "0.2.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.2",
      "dist": {
        "shasum": "23f6cdbb04c0e8b255e4615c0bdf9d117815a1ca",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.2.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.3": {
      "name": "enhanced-resolve",
      "version": "0.2.3",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.3",
      "dist": {
        "shasum": "cacc8455e1c41d8920b261480ee10ecd6ff2298b",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.3.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.4": {
      "name": "enhanced-resolve",
      "version": "0.2.4",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.4",
      "dist": {
        "shasum": "6f5b8f4066021255f99b25be9cd34b0529ae4b94",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.4.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.5": {
      "name": "enhanced-resolve",
      "version": "0.2.5",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.5",
      "dist": {
        "shasum": "a2cc54e58cb0ff1b7981f88ee9b4fa58326e71c8",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.5.tgz"
      },
      "_npmVersion": "1.1.61",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.6": {
      "name": "enhanced-resolve",
      "version": "0.2.6",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.6",
      "dist": {
        "shasum": "22a7fe92ee77c377ea1859aeb739c3f90652e19b",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.6.tgz"
      },
      "_npmVersion": "1.1.61",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.7": {
      "name": "enhanced-resolve",
      "version": "0.2.7",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.7",
      "dist": {
        "shasum": "31fbb95ecd774ecf2ac40074155b99fbe6774630",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.7.tgz"
      },
      "_npmVersion": "1.1.61",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.8": {
      "name": "enhanced-resolve",
      "version": "0.2.8",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.8",
      "dist": {
        "shasum": "0fe4018ce7b4a9cdd7a6b5e78c941dc62791f64b",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.8.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.2.9": {
      "name": "enhanced-resolve",
      "version": "0.2.9",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.2.9",
      "dist": {
        "shasum": "23d0659f79963877932e265a415ea60d2f8e8e35",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.2.9.tgz"
      },
      "_npmVersion": "1.1.61",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.3.0": {
      "name": "enhanced-resolve",
      "version": "0.3.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.3.0",
      "dist": {
        "shasum": "395d3fc2fd43fd0565b160de718573f49533ee03",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.3.0.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.3.1": {
      "name": "enhanced-resolve",
      "version": "0.3.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/resolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.3.1",
      "dist": {
        "shasum": "56a15de2b7b05079c4067aae1a9987c5635b96b1",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.3.1.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.0": {
      "name": "enhanced-resolve",
      "version": "0.4.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.0",
      "dist": {
        "shasum": "60c4300876bca576d2f62b6d96a9e28b67b95be5",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.0.tgz"
      },
      "_npmVersion": "1.1.62",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.1": {
      "name": "enhanced-resolve",
      "version": "0.4.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.1",
      "dist": {
        "shasum": "c92f3572fd6c154fc70f1c18eef3c76fd0b4b6a1",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.1.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.2": {
      "name": "enhanced-resolve",
      "version": "0.4.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.2",
      "dist": {
        "shasum": "dc84ec4c6561428140b15bcaa78203d93589175b",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.2.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.4": {
      "name": "enhanced-resolve",
      "version": "0.4.4",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.4",
      "dist": {
        "shasum": "5437898d3f9f8db366d3993ae1520e0f958d8902",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.4.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.5": {
      "name": "enhanced-resolve",
      "version": "0.4.5",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.5",
      "dist": {
        "shasum": "5d38d78e6aa36e371cfefc17eec2c4c57064b6cf",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.5.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.6": {
      "name": "enhanced-resolve",
      "version": "0.4.6",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.6",
      "dist": {
        "shasum": "9930f3329613bdbfeaca678d60f0eacea86b40ed",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.6.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.7": {
      "name": "enhanced-resolve",
      "version": "0.4.7",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.7",
      "dist": {
        "shasum": "3b9c5ca73bb2635116e80c06e0a32bcd9ab0892e",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.7.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.8": {
      "name": "enhanced-resolve",
      "version": "0.4.8",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.8",
      "dist": {
        "shasum": "9f84891004d770f9a88523aea6c87f8d9e3bf164",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.8.tgz"
      },
      "_npmVersion": "1.1.62",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.9": {
      "name": "enhanced-resolve",
      "version": "0.4.9",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.9",
      "dist": {
        "shasum": "45c21996d049f5e7252bb0a453adce93d7cfcb36",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.9.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.10": {
      "name": "enhanced-resolve",
      "version": "0.4.10",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.10",
      "dist": {
        "shasum": "7d3eca0e4c3832350e0ee7f864414a9f32a8a083",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.10.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.11": {
      "name": "enhanced-resolve",
      "version": "0.4.11",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.11",
      "dist": {
        "shasum": "258094db1dc354754238f9029bde702e5b4ac329",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.11.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.4.12": {
      "name": "enhanced-resolve",
      "version": "0.4.12",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {},
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "*",
        "should": "*"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/cachedFsResolve.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "node node_modules/mocha/bin/_mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.4.12",
      "dist": {
        "shasum": "8d6747bf3a6dbbc595457cb21f9b99633d15c5a9",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.4.12.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.0": {
      "name": "enhanced-resolve",
      "version": "0.5.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.3.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.5.0",
      "dist": {
        "shasum": "1f70c2d2fe50a410464b778afea27578475ee383",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.0.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.1": {
      "name": "enhanced-resolve",
      "version": "0.5.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.3.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "license": "MIT",
      "_id": "enhanced-resolve@0.5.1",
      "dist": {
        "shasum": "ffff62dad092d537693b57de333fa9f546f2d89f",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.1.tgz"
      },
      "_npmVersion": "1.1.65",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.2": {
      "name": "enhanced-resolve",
      "version": "0.5.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.3.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.2",
      "dist": {
        "shasum": "5aaa12b74bce55602a62d11bc46d7779333d9d08",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.2.tgz"
      },
      "_npmVersion": "1.1.65",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.3": {
      "name": "enhanced-resolve",
      "version": "0.5.3",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.3.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.3",
      "dist": {
        "shasum": "aee50a789809d9e6ee2dd48264f521148405e4cb",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.3.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.2.2",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.4": {
      "name": "enhanced-resolve",
      "version": "0.5.4",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.3.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.4",
      "dist": {
        "shasum": "a34226713f44474bc3b9a9cccfe1f6358e3ef088",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.4.tgz"
      },
      "_npmVersion": "1.1.63",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.5": {
      "name": "enhanced-resolve",
      "version": "0.5.5",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.3.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.5",
      "dist": {
        "shasum": "0f54fdffa4927bf6300973961c34d8acd7649099",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.5.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.6": {
      "name": "enhanced-resolve",
      "version": "0.5.6",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.6",
      "dist": {
        "shasum": "c4731a1b8029ab43d2fb13106e412f3bc7f26569",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.6.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.7": {
      "name": "enhanced-resolve",
      "version": "0.5.7",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.7",
      "dist": {
        "shasum": "4e5549931c02bf1f57b8864d18cda65294504fed",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.7.tgz"
      },
      "_npmVersion": "1.1.59",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.8": {
      "name": "enhanced-resolve",
      "version": "0.5.8",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.8",
      "dist": {
        "shasum": "07b00738f629fa0ebe784b394f9840dc6eb25169",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.8.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.2.11",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.9": {
      "name": "enhanced-resolve",
      "version": "0.5.9",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.9",
      "dist": {
        "shasum": "9977fd6ee9e4edc0b91705503a7ba87d7c83d799",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.9.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.2.11",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.10": {
      "name": "enhanced-resolve",
      "version": "0.5.10",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.10",
      "dist": {
        "shasum": "7ec1ace1b77515bdc5365c94a09ce1898670afac",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.10.tgz"
      },
      "_npmVersion": "1.1.61",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.11": {
      "name": "enhanced-resolve",
      "version": "0.5.11",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.11",
      "dist": {
        "shasum": "9014f331727ebf83de4ee2d0fac2952eaf60fd04",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.11.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.2.11",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.12": {
      "name": "enhanced-resolve",
      "version": "0.5.12",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.12",
      "dist": {
        "shasum": "9ffd5a2abb85acbf1e6f38944900d8830e290ea7",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.12.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.2.11",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.13": {
      "name": "enhanced-resolve",
      "version": "0.5.13",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.13",
      "dist": {
        "shasum": "3a4cefa931a3ea37f29279dbfb231fbe5331c731",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.13.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.2.30",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.14": {
      "name": "enhanced-resolve",
      "version": "0.5.14",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "1.1.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.14",
      "dist": {
        "shasum": "2528d28a45af1845d1afc8fa9686395f43de259a",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.14.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.3.11",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.5.15": {
      "name": "enhanced-resolve",
      "version": "0.5.15",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.5.15",
      "dist": {
        "shasum": "48ae41ebd9157e3e81fc51726955db8045fef702",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.5.15.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.2.30",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.6.0": {
      "name": "enhanced-resolve",
      "version": "0.6.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.6.0",
      "dist": {
        "shasum": "b01230c84e4b7c4124fc52b2a2206d7fe1fca9a8",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.6.0.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.3.17",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.6.1": {
      "name": "enhanced-resolve",
      "version": "0.6.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.6.1",
      "dist": {
        "shasum": "3bdbb1e7e084d12b766502ee258bfea8ba05ff67",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.6.1.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.3.21",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.7.0": {
      "name": "enhanced-resolve",
      "version": "0.7.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.7.0",
      "dist": {
        "shasum": "972ca2945da357947137abcde1d01750dcb94de4",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.7.0.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.3.17",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.7.1": {
      "name": "enhanced-resolve",
      "version": "0.7.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.7.1",
      "dist": {
        "shasum": "d13bd9bb002cdab64b18225ebe1289c901be41fd",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.7.1.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.3.21",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.7.2": {
      "name": "enhanced-resolve",
      "version": "0.7.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.7.2",
      "dist": {
        "shasum": "226ed39892520fd987f25cf0af7707211efacfb1",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.7.2.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.3.24",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.7.3": {
      "name": "enhanced-resolve",
      "version": "0.7.3",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.7.3",
      "dist": {
        "shasum": "f283ff1607e36d96b7ca8433b5421d062b41c99b",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.7.3.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.7.4": {
      "name": "enhanced-resolve",
      "version": "0.7.4",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x",
        "graceful-fs": "~2.0.3"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.7.4",
      "dist": {
        "shasum": "830c240a464cd37da1c2d4c6ca4198cebe984698",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.7.4.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.7.5": {
      "name": "enhanced-resolve",
      "version": "0.7.5",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x",
        "graceful-fs": "~2.0.3"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "_id": "enhanced-resolve@0.7.5",
      "dist": {
        "shasum": "f6be9e189314ab308b023bb45e24eff8276aa628",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.7.5.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.7.6": {
      "name": "enhanced-resolve",
      "version": "0.7.6",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x",
        "memory-fs": "~0.1.0",
        "graceful-fs": "~2.0.3"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.7.6",
      "dist": {
        "shasum": "4a429f76133da8266098e54be820e165d37e5ccf",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.7.6.tgz"
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "0.8.0": {
      "name": "enhanced-resolve",
      "version": "0.8.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "0.1.x",
        "memory-fs": "~0.2.0",
        "graceful-fs": "~2.0.3"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "1.8.x",
        "should": "2.0.x"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "b852d06c251fa5e7aa74fdc47deafd7c752e5716",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.8.0",
      "_shasum": "94e8357912828997caf24be48d074a6a8310cbe9",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "94e8357912828997caf24be48d074a6a8310cbe9",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.8.0.tgz"
      },
      "directories": {}
    },
    "0.8.1": {
      "name": "enhanced-resolve",
      "version": "0.8.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^3.0.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "1cf14609f83b0359f8acca9e0830cce1e9dc16ee",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.8.1",
      "_shasum": "2ba0ce61764c2e5bf7d40f7cc376bd8f14e3ac68",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "2ba0ce61764c2e5bf7d40f7cc376bd8f14e3ac68",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.8.1.tgz"
      },
      "directories": {}
    },
    "0.8.2": {
      "name": "enhanced-resolve",
      "version": "0.8.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^3.0.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "7e8bdbb2d7b8dfde9a73dde75e9b704f5bbed289",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.8.2",
      "_shasum": "57d007c18f0a97c369e81bc28a5992419466be5e",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "57d007c18f0a97c369e81bc28a5992419466be5e",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.8.2.tgz"
      },
      "directories": {}
    },
    "0.8.3": {
      "name": "enhanced-resolve",
      "version": "0.8.3",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^3.0.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "15b03acff116507901286f06fead7d4865f45eb8",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.8.3",
      "_shasum": "00e1a46a499379b2022c29516131d7246b8f60f1",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "00e1a46a499379b2022c29516131d7246b8f60f1",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.8.3.tgz"
      },
      "directories": {}
    },
    "0.8.4": {
      "name": "enhanced-resolve",
      "version": "0.8.4",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^3.0.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "03eb8dbc4e95c010ba4e0c80484e40aa2408a33e",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.8.4",
      "_shasum": "4dae8ed556e5312256a9dd317919478e904b5387",
      "_from": ".",
      "_npmVersion": "1.4.23",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "4dae8ed556e5312256a9dd317919478e904b5387",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.8.4.tgz"
      },
      "directories": {}
    },
    "0.8.5": {
      "name": "enhanced-resolve",
      "version": "0.8.5",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^3.0.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "8a25d8830ceb0c86c26654a334d47a357f5173ed",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.8.5",
      "_shasum": "cf0a05c2d186969e1681963e59593ffdd8a4362c",
      "_from": ".",
      "_npmVersion": "2.7.4",
      "_nodeVersion": "0.12.2",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "cf0a05c2d186969e1681963e59593ffdd8a4362c",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.8.5.tgz"
      },
      "directories": {}
    },
    "0.8.6": {
      "name": "enhanced-resolve",
      "version": "0.8.6",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^3.0.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "3b88905ad3cb6392f48f7bc57d351891774fd93b",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.8.6",
      "_shasum": "0806a6b643949aa79f879e5adc6db8bb2b77f35f",
      "_from": ".",
      "_npmVersion": "2.9.0",
      "_nodeVersion": "0.12.2",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "0806a6b643949aa79f879e5adc6db8bb2b77f35f",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.8.6.tgz"
      },
      "directories": {}
    },
    "0.9.0": {
      "name": "enhanced-resolve",
      "version": "0.9.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^3.0.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "c974fba5699ff287774408edd734a4029ed43050",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.9.0",
      "_shasum": "2354591f240649669f830e33ec5c3f2e5d80d400",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "0.12.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "2354591f240649669f830e33ec5c3f2e5d80d400",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.9.0.tgz"
      },
      "directories": {}
    },
    "0.9.1": {
      "name": "enhanced-resolve",
      "version": "0.9.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^4.1.2"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "istanbul": "^0.3.5",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "test": "mocha --reporter spec",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "1d14a6debbe4054f84d7d7f870ca0a1cb963f75b",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@0.9.1",
      "_shasum": "4d6e689b3725f86090927ccc86cd9f1635b89e2e",
      "_from": ".",
      "_npmVersion": "3.3.3",
      "_nodeVersion": "4.0.0",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "4d6e689b3725f86090927ccc86cd9f1635b89e2e",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-0.9.1.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "2.0.0": {
      "name": "enhanced-resolve",
      "version": "2.0.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.1.8",
        "memory-fs": "^0.2.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "beautify-lint": "^1.0.3",
        "istanbul": "^0.3.5",
        "js-beautify": "^1.5.10",
        "mocha": "^2.1.0",
        "should": "^4.6.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --reporter spec",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "41569fcaa1c5229c2949907f3ffef39746dfdc57",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.0.0",
      "_shasum": "5984076290a36df1f9d5f6dabd4fc425816c8436",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "0.12.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "5984076290a36df1f9d5f6dabd4fc425816c8436",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.0.0.tgz"
      },
      "directories": {}
    },
    "2.0.1": {
      "name": "enhanced-resolve",
      "version": "2.0.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.2",
        "memory-fs": "^0.3.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "beautify-lint": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --reporter spec",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "e24f2e31abd6352928a3e3a38f2e3e6ff831c4f1",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.0.1",
      "_shasum": "b554140e14531448469b58260c518e7ec87b1c23",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "0.12.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "b554140e14531448469b58260c518e7ec87b1c23",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.0.1.tgz"
      },
      "directories": {}
    },
    "2.0.2": {
      "name": "enhanced-resolve",
      "version": "2.0.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.2",
        "memory-fs": "^0.3.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "437211bebb54e18f0ccfbd9ef9db5106c40be96a",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.0.2",
      "_shasum": "dd6f715770123d55ea372eba5d4cd0af69757859",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "0.12.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "dd6f715770123d55ea372eba5d4cd0af69757859",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.0.2.tgz"
      },
      "directories": {}
    },
    "2.1.0": {
      "name": "enhanced-resolve",
      "version": "2.1.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.3",
        "memory-fs": "^0.3.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "a576289820fadedfd2d96efd828dd7a781d8d0f9",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.1.0",
      "_shasum": "e630d78d969106f7a41b2c1f601ddf1550b1a5de",
      "_from": ".",
      "_npmVersion": "3.3.3",
      "_nodeVersion": "5.4.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "e630d78d969106f7a41b2c1f601ddf1550b1a5de",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.1.0.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "2.2.0": {
      "name": "enhanced-resolve",
      "version": "2.2.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.3",
        "memory-fs": "^0.3.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "003577d5247fb9550d68efb79f6f492090603393",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.2.0",
      "_shasum": "569f117a0e28b1cd1273874d7d5f4b9a20357432",
      "_from": ".",
      "_npmVersion": "3.3.3",
      "_nodeVersion": "5.4.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "569f117a0e28b1cd1273874d7d5f4b9a20357432",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.2.0.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "2.2.1": {
      "name": "enhanced-resolve",
      "version": "2.2.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.3",
        "memory-fs": "^0.3.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "b3e41d040387534049b87c5ca4d4826929efd5c1",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.2.1",
      "_shasum": "74fe93fe62b21a10d696886b1c3f0689e2db2277",
      "_from": ".",
      "_npmVersion": "3.3.3",
      "_nodeVersion": "5.4.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "74fe93fe62b21a10d696886b1c3f0689e2db2277",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.2.1.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "directories": {}
    },
    "2.2.2": {
      "name": "enhanced-resolve",
      "version": "2.2.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.3",
        "memory-fs": "^0.3.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "d154f01b6f74b90f3ac3c5ea6cca89abead5236c",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.2.2",
      "_shasum": "4da494d591183308bd46a95f5b40e255dc9d4a16",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "0.12.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "dist": {
        "shasum": "4da494d591183308bd46a95f5b40e255dc9d4a16",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.2.2.tgz"
      },
      "_npmOperationalInternal": {
        "host": "packages-6-west.internal.npmjs.com",
        "tmp": "tmp/enhanced-resolve-2.2.2.tgz_1454625150655_0.08377046603709459"
      },
      "directories": {}
    },
    "2.3.0": {
      "name": "enhanced-resolve",
      "version": "2.3.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.3",
        "memory-fs": "^0.3.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "7df23d64da27cd76b09046f9b9ffd61480c0ddca",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@2.3.0",
      "_shasum": "a115c32504b6302e85a76269d7a57ccdd962e359",
      "_from": ".",
      "_npmVersion": "3.3.3",
      "_nodeVersion": "6.3.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "a115c32504b6302e85a76269d7a57ccdd962e359",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-2.3.0.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-16-east.internal.npmjs.com",
        "tmp": "tmp/enhanced-resolve-2.3.0.tgz_1473264488493_0.4070103398989886"
      },
      "directories": {}
    },
    "3.0.0": {
      "name": "enhanced-resolve",
      "version": "3.0.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.5",
        "memory-fs": "^0.4.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "9bc2f27eea8f638cfd647feb3204b4f62a8185a0",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.0.0",
      "_shasum": "cf30a6600bc236a4fcef627bb8e5adf072511a8e",
      "_from": ".",
      "_npmVersion": "3.10.8",
      "_nodeVersion": "6.9.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "cf30a6600bc236a4fcef627bb8e5adf072511a8e",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.0.0.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/enhanced-resolve-3.0.0.tgz_1481045782427_0.4686593187507242"
      },
      "directories": {}
    },
    "3.0.1": {
      "name": "enhanced-resolve",
      "version": "3.0.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.5",
        "memory-fs": "^0.4.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "08ac17f39aced687bfd3c154e952076eb80003c3",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.0.1",
      "_shasum": "4df07e42d444fd698876f0feae55f7b992012ea3",
      "_from": ".",
      "_npmVersion": "3.10.8",
      "_nodeVersion": "6.9.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "4df07e42d444fd698876f0feae55f7b992012ea3",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.0.1.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/enhanced-resolve-3.0.1.tgz_1481717808253_0.07748457370325923"
      },
      "directories": {}
    },
    "3.0.2": {
      "name": "enhanced-resolve",
      "version": "3.0.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.5",
        "memory-fs": "^0.4.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "3d112c831e1aba5c8fad4846df9a13e7a2df6ec7",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.0.2",
      "_shasum": "0fa709f29e59ee23e6bbcb070c85f992d6247cd1",
      "_from": ".",
      "_npmVersion": "3.10.8",
      "_nodeVersion": "6.9.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "0fa709f29e59ee23e6bbcb070c85f992d6247cd1",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.0.2.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/enhanced-resolve-3.0.2.tgz_1481845643602_0.8817655239254236"
      },
      "directories": {}
    },
    "3.0.3": {
      "name": "enhanced-resolve",
      "version": "3.0.3",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "tapable": "^0.2.5",
        "memory-fs": "^0.4.0",
        "graceful-fs": "^4.1.2",
        "object-assign": "^4.0.1"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^1.1.0",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=0.6"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "12ef0c4e8772f6787a5447bbddfaae58f83d39f2",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.0.3",
      "_shasum": "df14c06b5fc5eecade1094c9c5a12b4b3edc0b62",
      "_from": ".",
      "_npmVersion": "3.10.8",
      "_nodeVersion": "6.9.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "df14c06b5fc5eecade1094c9c5a12b4b3edc0b62",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.0.3.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/enhanced-resolve-3.0.3.tgz_1484129345522_0.14447376737371087"
      },
      "directories": {}
    },
    "3.1.0": {
      "name": "enhanced-resolve",
      "version": "3.1.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "object-assign": "^4.0.1",
        "tapable": "^0.2.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "e9befd061078834e7d6a4fe4353ff4e45756039e",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.1.0",
      "_shasum": "9f4b626f577245edcf4b2ad83d86e17f4f421dec",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "9f4b626f577245edcf4b2ad83d86e17f4f421dec",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.1.0.tgz"
      },
      "maintainers": [
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/enhanced-resolve-3.1.0.tgz_1486122417999_0.9443127282429487"
      },
      "directories": {}
    },
    "3.2.0": {
      "name": "enhanced-resolve",
      "version": "3.2.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "object-assign": "^4.0.1",
        "tapable": "^0.2.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "311f4fe9db6ad43b57c6c62c2e25316c589d6c5c",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.2.0",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "6.11.0",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-Vlr4UydY821fadrNdW00y4FwebPe6TnD9dK0HhwhsqXEVpVCZnlZiGMcysrLT0+zENzA5Q/k9NCTXW0qbNRsxg==",
        "shasum": "7b60300c98e155a9caa06bf4550ec010bf74f6f8",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.2.0.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-3.2.0.tgz_1498911177672_0.4523597196675837"
      },
      "directories": {}
    },
    "3.3.0": {
      "name": "enhanced-resolve",
      "version": "3.3.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "object-assign": "^4.0.1",
        "tapable": "^0.2.5"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "87b7bbb4f17a3287c44ebc16f10552089e4d0383",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.3.0",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "6.11.0",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-2qbxE7ek3YxPJ1ML6V+satHkzHpJQKWkRHmRx6mfAoW59yP8YH8BFplbegSP+u2hBd6B6KCOpvJQ3dZAP+hkpg==",
        "shasum": "950964ecc7f0332a42321b673b38dc8ff15535b3",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.3.0.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-3.3.0.tgz_1498921673457_0.8890228546224535"
      },
      "directories": {}
    },
    "3.4.0": {
      "name": "enhanced-resolve",
      "version": "3.4.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "object-assign": "^4.0.1",
        "tapable": "^0.2.7"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "8cce0a4fc064730d380f39c697f2838953db24d2",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.4.0",
      "_shasum": "039c09818871c86efcff7b4b69dbf6c9b18300a6",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.11.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "039c09818871c86efcff7b4b69dbf6c9b18300a6",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.4.0.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-3.4.0.tgz_1500883380089_0.22926895576529205"
      },
      "directories": {}
    },
    "3.4.1": {
      "name": "enhanced-resolve",
      "version": "3.4.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "object-assign": "^4.0.1",
        "tapable": "^0.2.7"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "91752e92f0bb4c4384d2127a6d57d0dacb435bb3",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@3.4.1",
      "_shasum": "0421e339fd71419b3da13d129b3979040230476e",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.11.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "shasum": "0421e339fd71419b3da13d129b3979040230476e",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-3.4.1.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-3.4.1.tgz_1500899671441_0.15842896839603782"
      },
      "directories": {}
    },
    "4.0.0-beta.1": {
      "name": "enhanced-resolve",
      "version": "4.0.0-beta.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "tapable": "^1.0.0-beta.4"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "46244b326bd61e53eca499d6bca9937731a568c7",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.0.0-beta.1",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-vJ01fSrObB1c5tZO4SroRgG+oPkExZ7dUYpEtojEscH2K7BJcg8rWWA8TW7CAQSRb4euJ9LFU8NAbpG5QxOCeg==",
        "shasum": "f8257df604491e83eed7a3d20568fcd4c849c251",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.1.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-4.0.0-beta.1.tgz_1511969350614_0.5967740998603404"
      },
      "directories": {}
    },
    "4.0.0-beta.2": {
      "name": "enhanced-resolve",
      "version": "4.0.0-beta.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "tapable": "^1.0.0-beta.4"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "ad472901c8c72de0e6f1af816bbddf42be94127d",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.0.0-beta.2",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-OQfvXu+nF8vR+CiNYjUk1565pROxNhlQeUmjxHdfPTsj1jM0E0k0q8Ez4zTjoV07mt9GB1rtVGUctwhUwfP6uw==",
        "shasum": "a13a9da2340712c4f3dacf27e26717e2eae69c24",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.2.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-4.0.0-beta.2.tgz_1512028387765_0.9725247025489807"
      },
      "directories": {}
    },
    "4.0.0-beta.3": {
      "name": "enhanced-resolve",
      "version": "4.0.0-beta.3",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "tapable": "^1.0.0-beta.4"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "685cfe7cc5551e688c4fc94ef3fe8a745d8abaa8",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.0.0-beta.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-4gvfQYOhCu0q9QoPPAuXHQYchYR4/Fq0iXSsfQRrGk19B7ktBAx/r6kLTXNoBEJ4CKm2tSSpe3kMwWVCkU06Sw==",
        "shasum": "e06b5964fc10e067370a7d7b2b52db64ccad607f",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.3.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-4.0.0-beta.3.tgz_1515082378014_0.9996988002676517"
      },
      "directories": {}
    },
    "4.0.0-beta.4": {
      "name": "enhanced-resolve",
      "version": "4.0.0-beta.4",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "tapable": "^1.0.0-beta.4"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=4.3.0 <5.0.0 || >=5.10"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "a81e3c4ec734c0f02f71c456e6dbb3a9ff106032",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.0.0-beta.4",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-9d8MpQy2g8+DRPh3vhU3DnxVTDJ7R5nD3i4N/mhRuBzuHAtFnLawXKEsjsi88S0Jfr+5i6sUJu05B9VrjxIYEg==",
        "shasum": "17e14aea8ded4d6daa4a6bff67f2d38fcca76452",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.4.tgz"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve-4.0.0-beta.4.tgz_1515095870877_0.8757257310207933"
      },
      "directories": {}
    },
    "4.0.0": {
      "name": "enhanced-resolve",
      "version": "4.0.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib",
        "LICENSE"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "tapable": "^1.0.0"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=6.11.5"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "42ff594140582c3f8f86811f95dea7bf6774a1c8",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.0.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-jox/62b2GofV1qTUQTMPEJSDIGycS43evqYzD/KVtEb9OCoki9cnacUPxCrZa7JfPzZSYOCZhu9O9luaMxAX8g==",
        "shasum": "e34a6eaa790f62fccd71d93959f56b2b432db10a",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.0.0.tgz",
        "fileCount": 42,
        "unpackedSize": 87441
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_4.0.0_1519286517726_0.40452979352109186"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0": {
      "name": "enhanced-resolve",
      "version": "4.1.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "files": [
        "lib",
        "LICENSE"
      ],
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.4.0",
        "tapable": "^1.0.0"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "beautify-lint": "^1.0.3",
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^3.14.1",
        "eslint-plugin-node": "^3.0.5",
        "eslint-plugin-nodeca": "^1.0.3",
        "istanbul": "^0.4.1",
        "js-beautify": "^1.5.10",
        "mocha": "^2.3.4",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "beautify-lint": "beautify-lint lib/**.js test/*.js",
        "beautify": "beautify-rewrite lib/**.js test/*.js",
        "lint": "eslint lib test",
        "pretest": "npm run lint && npm run beautify-lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "npm run lint && npm run beautify-lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "npm run cover -- --report lcovonly"
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "635c2c7e33910bb89845bbeb8ef2c4eda36527f2",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.1.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.3",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-F/7vkyTtyc/llOIn8oWclcB25KdRaiPBpZYDgJHgh/UHtpgT2p2eldQgtQnLtUvfMKPKxbRaQM/hHkvLHt1Vng==",
        "shasum": "41c7e0bfdfe74ac1ffe1e57ad6a5c6c9f3742a7f",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.1.0.tgz",
        "fileCount": 42,
        "unpackedSize": 87286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbNNlBCRA9TVsSAnZWagAAelQP/RN6qjoBYuiboI0Hn6DH\npe0HdLWarB1fc4MDfK19k8bCsZJqN36ISHgfQ1NTXfWGbdN+r/S8coNc8zxk\nMWkkMXSyo8+/KgMm4fYJd8MrDfKAqRwd345tiLipVYihfXqO5K28aBJhOiDo\ntS0GJFnRhkiApQDeKHHzZLGFvjBXZGQ6hjHaQHY3pvp6x6q8s0xzS5CRO9qy\nKDmXDTKAtY/k28gA52nhSbMezQTRE94sX9ymlb4hn8nPZw20QtvPz6KYC9kT\nXkDJonOpGOHOyGutoTRXsu7VkNNRl2lMPCx9C15m5rDaYkXvdX53wf+vyG4E\nwW6InYDr0u0aVq627wZ3rvgURwEqTxODDsmrJ8ZAct3dQGZ/yVi+hdgwyTr6\nfIXstMG3Z3WDdXZll73oQ2hT/MSBXPSaeu8w2jmMgprjVg4dpgm/DyXeYE8T\n+Vx/KKUBPyOdlVtOekkVSw4hV3xdeuU7ZvTW71r18y0V0xpu4iPiz+jmEDaF\nsQpvDakoDe48X/IsmJA53BQQMiplJIyuXYdfcNrCA7PrwsFiUzUc1z1FRaWt\n73lZOmJ2VUawrBfzbPTNj9byU1hwyA4+rMCbKsLzHet3AhZfAmRVTJ01NFJg\n/OeYIanIWLBGBqkPLsq9eV4b7+QmnbveWqepoNsCf0yCZVTLjZ3legCyrEJs\n6djg\r\n=L4ha\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_4.1.0_1530190145639_0.5807606391410616"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.0": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^6.1.4",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=8.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "322963c8b6cff96594d2b057180016fd89b1af35",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.0",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-s0jFC1SvF64ZDMdJfkSATGvQPaXjOq49PJHEvodqUiY7pCMRzHjfQgTkTM+Nxpg29ym9ASjEPSiHqo1trqvVEA==",
        "shasum": "7635594f4f38a515ba3a5a93498556828964d3ac",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.0.tgz",
        "fileCount": 37,
        "unpackedSize": 77468,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdHmYMCRA9TVsSAnZWagAAZX4P/0EYFYQZdBnh6Oc2cJIV\nuZQPY3fsHWm8zyullzmpu/Z0mj2CBwEyX6Hmxdy8jPGLTlmoestCUnkTKXKt\nve1kyPKM1XpqlmEIZ2Rbu5r4REia6SJunVla8Zs7pRhqvyTLirGRXagd3sYt\n6yh+7KlTt0YajSL3anbAXkrbnPfzzyfBg5E+GIaCYGU8fh2QX6wrv8XpfMpA\nBtWMo0K+F2tETesHVFSjNyqHWvIRfavgn/rhfcW3kELyqU8cJvzrApVeMZA9\nUa4CsbDVIv8gfPWqjm3LnI8pobYVI6WeCHoMlFNNBpPZbGanwDCjW15Uzmp8\ngeCesjL1IQq+9N7WP7amcpidyuE5MG0AHD7Zolj4htHOkxlpZh/2XiZ0dXy+\nDFHJs3q97PwncSonzbF3H1UfNtKy6lE3Gbsm9C8wmouuZhzR0P2+vBYOdJ6L\nOudLONfADyCJXMkbvCjMazG/KEOG5etxWHBy3jYJcKm9khjEj/UBcJIgPJwd\nTxeg7E35J/m0qQEkETVQhd0+7T8zqJ30Y1Vp+CHaiyko1QO4yDybu0zjphFD\now2AaGfbWrL4lZ0z5OSGuxM7Q4+gwGkVf7meV+1m2eV2Hr298AJvmwly2CXf\n129LiRdyBsXlRciU2ND3rH40EBFtrdrWGn3bmtYwB8mnZupQSiKq8+xJToEw\n4si3\r\n=DJWF\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.0_1562273291778_0.9235238103780381"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.1": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^6.1.4",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=8.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "c3eb2fceee546470df436eff8b726a0601f1706a",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.1",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-dlCyQrjJDL/RJzVWzZkrO5aL8EYCGpMvqGv5IPwaVCO8yLMs+rQuuMczeOxYNj0hD2DAtOGAfvocgDkzbNCmDg==",
        "shasum": "600c242ec84a31f7198e165ea08143eef2cc3a04",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.1.tgz",
        "fileCount": 37,
        "unpackedSize": 77654,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdI1DkCRA9TVsSAnZWagAAUEMP/1u+WyS7suOYN1nWPvnP\nB5MtRMUxD6WZoV4qOaQ1jGl0b1yOgF+G4ie0sTZtbnN5HhkH5ZeUD825BOLv\nrVwUVtVtaaKEQ0pN+Vhr7SRR0DVLhEuMM/OKd/RqtYdjwMsN3NJrkWDQEpwP\nNQI+HU80Lg5BzUVUeUv3fqJ6b0X2goQierhusXscweZdMYxa1Ax42PTx3HwS\nUc9BaXPxB8wg6buR9iqDhBmpXAbOamoPEwu28pT8x4dV0818iteTjTCcVC+I\np6PB0fc1mlVaWluIK3uFh5pTQ/EI9sU/IovZgUngaupdLIJsCerQeycxTimM\nC2+oj2VmbHk7Zyorulsez9NtggKXzTWt6jSbKgJv8fL0Qte3R+iCM3rt2020\nxIcwXYqKZul1HZEEgjRWL0MzTq5TCHHvNomD48jPP54olZwvwgd2hMsJSvQu\nEJGB5uVPiyzVVSa+3puSf56MF5IuBC6VqcNiKF4Y70Qul/KqpWmwPBodkDxr\nrKALYCNEXAdopNTgduH/eyFmxI3TDf6CIyTmaaqRb4OK8+ueC669OHkBWbmp\n50SKS4MsSSF8HOIQxwU/wxwNX10/NhzcVBYzgsVUuEy4Dcj90hAXZdxpNsEI\n1/w7Lh5XhFddRUsVtz9cfE+YiVX9mBiDeTd8l982rXY9k4gRywdpDEi00Ahe\nrFaT\r\n=wrtK\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.1_1562595555512_0.11159144361801832"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.2": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.2",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.8"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^10.12.21",
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-jsdoc": "^15.2.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^6.1.4",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "typescript": "^3.5.2"
      },
      "engines": {
        "node": ">=8.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test && tsc",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "1b63dfb4e912d326afa5a3fffafcec71a6ea7afb",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.2",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-qo97XNV7JrYZR9eaFRPfKtOtiF1RBTGIx9v+j5DttaZyAhwgXnhs69YYTzEKgQpiOW8snnAiVdp5/eu+d3/55g==",
        "shasum": "9dfd00b7d73e7d6e0acab9e1f54241a557edbe8d",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.2.tgz",
        "fileCount": 37,
        "unpackedSize": 78036,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJMJzCRA9TVsSAnZWagAAGfoQAII07q6bTQ/P1D97BmqM\nKiH/ok2rj14IgYOJIEKo8mYp3mjNjnfyv1Dav8kN0GRjTfI9g6Dy1ttXevxR\nkRuvaSRniEc0n1JvEKfOVdHOvCgM0CtAkTSJvSxMm/sX2X0wivLLaaTB05b2\nIL0kXz9EvxCF+fq/yRyJlfy/Y4nSSWEvl+hKMwwektAkitIB1kaM8hh9pP3j\n9raAzegpWQmKEt06qtOU4C4p/b08qC7BYPZA6O3g+wGQCoz3/4pqi+3NJKzD\nE4FrgZ56DK6Tms6XnDQ2IvGF34uft0pU5nD018HJh6cglLY5CS+8M2XLdtmG\nYkiwFU9/y1Xpgvok+oKbGHFyPSF2kJ0R1eC5GlTTMmQBB8BjqGqCzx7EFbJi\n3GygjBeHU6yfT2m3dofLDx0K1bJrhJAuAjc7/PR9/pAfqAMw3OoK4S66AxKV\nbCBdksW0q/bhvQ+KIdQX0rQ7Sw7erWPrqL3Xd+dQgA3orgpkYHWcgQPmLVpV\nVkESc+OSY2V47xWs0ooStX0TZavPPOKry9ztw2NMLkjFdY1vxLTmeV5objla\nxpZ5PJT63GrZ4oExy/+glcRKPAfAk8d5kkA/9B1g8ngt0eXt06/5XoZwhToD\ndxrpnrTeyLSRNuSWRYpbK8Sbe71FL/sO8Aw/D/I1N2dxSXkGy7Q5+pqC5dRO\nu3Cf\r\n=cm4E\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.2_1562690163013_0.04001123090124614"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.3": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.3",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.8"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^10.12.21",
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-jsdoc": "^15.2.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^6.1.4",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "typescript": "^3.5.2"
      },
      "engines": {
        "node": ">=8.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test && tsc",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "c01f7497df5caa898dde36b89ec1a7fb3cca31d1",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.3",
      "_nodeVersion": "12.8.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-SMjrP/h0qau9mj6L+dY0I350vTnHUDNm3hjV2QRzqhfaa6UYAkDoLfuRWPqAErKDejveFPyGLiQx1A8a5uR5hQ==",
        "shasum": "1f5b24d223db90a2e86235c365e337fcbf28a68b",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.3.tgz",
        "fileCount": 37,
        "unpackedSize": 78315,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVnqVCRA9TVsSAnZWagAALg0QAJQab7+9f8Yh6Ql2n2hu\n98gD74j4TS4MAhbkCW0Gylw67y4NE4ImGUtlrfLrOWda58ppzpIKBYGAQntW\nkO0K+ci6PEWLI7KMtmbXVRnpjM3za2huwEXqIZKhSNDxLBuwuLsimDIjkZK/\nL//jVIYPlMdESJ0hzq1FJYjCli4ormyjEXuVKL466bKz5Wjw/Qsyqkjc4L5k\nqIroDXJA6JOAhaNiNiZWhb62h6ujPlmgWv/BBrMZt30ihT5X6r/TCjkElj9U\nS5L5ZFiq/SYqLE2kyHl+IMpfzXZade9caIGAmGsr/XAfv2McRvU2DstVOrhC\nblq245ILEYNn/GUbF8QISbUc7hD2rUqSILRCuLMYd5oOEPombYpn+k+e/pf5\n43Vb5GpOpHQ4kQUfCjp6nKhBLweD1+ly7evT0b1lQJu3+Q0HlTTHeWg9bri2\naCIHeOuho4aWWqQEg0dwn5uNoXIRQtKsRgEAlDMP4MXAiK0/M0v2zSLUlNFc\nMBnzOceXaGMOVXQvKc2gfDqJP/A7Pt/iFU3UcTq17zb3Posp/0/gQ77AGu50\na17PSI3BVEKcKVuLjEw8d/07KhX6TB+GPTlECgYh/En4uSJutA6m/zHm9iYs\ntwKRbHss7kIuiXCPEBL1QxMsnfcot7GJlK2MjL6YoEhd8y4tAONkJCDywauZ\nUM10\r\n=7+2I\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.3_1565948564447_0.7563140388639931"
      },
      "_hasShrinkwrap": false
    },
    "4.1.1": {
      "name": "enhanced-resolve",
      "version": "4.1.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.5.0",
        "tapable": "^1.0.0"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "istanbul": "^0.4.1",
        "lint-staged": "^8.1.0",
        "mocha": "^2.3.4",
        "prettier": "^1.15.2",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "yarn cover --report lcovonly"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "98825ba306fd3f31ffaca63d6bb2ad001007cad2",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.1.1",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-98p2zE+rL7/g/DzMHMTF4zZlCgeVdJ7yr6xzEpJRYwFYrGi9ANdn5DnJURg6RpBkyk60XYDnWIv51VfIhfNGuA==",
        "shasum": "2937e2b8066cd0fe7ce0990a98f0d71a35189f66",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.1.1.tgz",
        "fileCount": 42,
        "unpackedSize": 88616,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnIJvCRA9TVsSAnZWagAAFXcP/j6cheZ8K/2cwL5IDAm7\nus/Gf6lCOUXEF2T/ytZ33PqAi8ZwuEEImmuPDpT9d839X6qpT2rAVNzsE6B8\nvfhYqVbBR9gV8YDsf1DCSU+iWndxnxwXigCnDgYMwZO1GgrP8mU2jzhlciTr\nUkNU673m86FZ7pIZNSqRdqpjtOwHgptL/rtCNT8EJz0gNYR2oDorweFLmYaC\nGOjBsp3IOpcrWCd4YLbILX89Cid9LTHQk7p7fqKsEy4qFs+R6p287DHJVmn4\nbnf282FFDDexRb6CufOSJYfVE2+4pQNk59b0plEVWJk1Cl1tQJ2wG4fG3Qqy\nJXCHEp5kGKKdTkCVJnbtzyltP1sNk59hDtXr+oYLOvSPR6cnYjA1VppiBpW5\nLJsKK7aYfcwTw+2QjGfV4pejEp3pF4AQKtsU51TFDXt9f1JJyPYGVhK9cq8g\nChhMgdgX18BOSr172e2EsVG10vNkOOpSDWw3oXYyJMcv0APOWwPRHfGA4nJR\n6E4eyYzM7QAeOwffW2Nu7O1D7PhDErui1CsGv9eE5/UamSmE1hGwOyQ/379j\nozuBi6M4Yj3A+HF0+UiQwUnMihF3H+9lSUSkqsRZwASayMayKkSbTs4lpEhW\nxWS0YNOr+dJLc6GFLkvL14vBYqOntJU5AK4szCgklGsTsiLC2xQDzO+PHh5V\nRfwp\r\n=+KJo\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_4.1.1_1570538094357_0.7941006267070527"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.4": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.4",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.8"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^10.12.21",
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-jsdoc": "^15.2.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^6.1.4",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "typescript": "^3.5.2"
      },
      "engines": {
        "node": ">=8.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test && tsc",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "95a59e3facb5b1f0e5f72a2d19e4fb6e7cf8816c",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.4",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.3",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-5/C1ZLbPbiFKM9WnF2LKvwresdLoKb0Py6r9XAt9gojZ6wnJb1ay2OzLY+T0DX5KSrimvTufAGISysArUlRpdQ==",
        "shasum": "a14a799c098c2c43ec2cd0b718b14a2eadec7301",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.4.tgz",
        "fileCount": 37,
        "unpackedSize": 79018,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwfDmCRA9TVsSAnZWagAAFj4P/2W9QLx2yMUVSMEZwxII\nSg+ttliE7m7ILJTIee46UX1Qi/r7FfYoGO7P0VZA+HZCABNa/qy6ZDOKCMUh\nTTleFF2MK/BzI3piD7AGW9lb5kxEHVPxFtXP+nlnAv/Yt9yup4GG9h+enD5l\npBcLG1jUhmOcKkJWPuEoGXGCbJZAfVNU3hJd+LWvWCCAB1b0cChNvt1151oU\nZdHpx6RXsNtMPKgZOPsVEP59hLAMp4m5ktcn2yGr3SdaYU5CK6KJ860kgyD1\nVHa19kF8um4MwwmDpnm9Wg3X8Z8TM1+m1C1ZmGi/kGjx70b6BT0JVZrsDxEf\n7dfGeVx11XFXWxbBuxpH3hx/0fUsQPKziHvL+sFO/b0m7XZhHXowjU897beu\nJ79Ut3PnwJ8eq6FtD5cI4k/B3HehddycJvxO2IrSTaUDwLgBPC14fcehZ+FY\n5vt/RFi29da/UIDEupe964RkssM+Qfb5hYMwzXk3wJtOLeAkxYKLvsOQT7iJ\nsaW7y3v1DMis0Iij4gjNYGHrwHft8f+eyC22HwVhrDmqR+wXcgTO9kW4NCo8\nI5CDSmTwaFOoYfyt0eUHUYTSDowVPGzSC582osz9cmsbjc5ctBkQAR0dD6i1\njUe7uKEDeYsGNDEBKE4xru3sJnURnKmj15zCcYm+c5uzTCUeep9STS5C8cTz\nHGqc\r\n=Ov8k\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.4_1572991206242_0.1531285229102135"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.5": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.5",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "3ad1fd02760bae692ea510d0f23f7696d5bf02d1",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.5",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-v57Kr9URxhxWNhyF6+Inbezz/7jld4m950YrKBTzy1wzRAmNg+40HAMQFijCMw9tWIlXONfaoJGYcDOIpAREEw==",
        "shasum": "f0747982711bc2d823e768d68f00e421ea5f86ae",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.5.tgz",
        "fileCount": 41,
        "unpackedSize": 125120,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeyC9VCRA9TVsSAnZWagAA3nIQAII6WmAx/LsIAI/o8MIP\nDseiRAbSS2Y4N1c2ozSTYjjQkl0gAFqwlgA2gsOagG0VnVYP9leXeYreC89O\npl/yKlYeSKonkz2wb6UEz4zvKVI/tAngAkWldJK66g4kDlFmwrgtuf/rmJLJ\n5Pn+nm4qy2Vz8cASKdYj4Eob41F6S4Q/2aPABQlK2YokLUCfBf9dYvJeFtoM\n6c7CJNdtJ0gz0OAk7qX6AKtoqcZShb+2S7LZglNI+7SjRl/9OrHfluyFGdc1\nbes4VIInNSZuIp2AqDoj3epGuK8VXmSlAILqKZcaLGBVFDd1CPMbZdJdrk5A\nDgD9hmEDKwTJ6OmjWeaCo8uxhkHKGDqcsbOS10UUV0leMYNvFPeYojOZTEzS\nwnQ4e4fuJDDaSiGLRnILwAmod4ebICVTwWhMojPN4KiqCNQ5astuum1ca4MV\nwkN7CPdCzMCM8Xv+46ni+rkz+TxLjCAK5PfH9/jP3O4nQeic8S/eU55lD8Pr\nnVcEl43pWWTe8mHALRq8t72TV+br0CGvt7XbZSvACYVXpI9i8MBhLkahc+fz\nT8NmrxfFLcSt5SlR3iJ6TpyYTVplqwYHJJ3MPlKrgHQZXUyMrxazQ9MlZsg/\n5zGITD+fCALU942cYP58G+fQQSxL6rPV/gvTlVggkbFjfw5iKt8r7g99zSfL\n3X5i\r\n=TOSq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.5_1590177621166_0.9760911263407595"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.6": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.6",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "cf930fea3f3c95792e55b206e1477a8bb15fbaa1",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.6",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.13.0",
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "dist": {
        "integrity": "sha512-4LMyFuW56kf7DCOGDVbphVU1JDEaKaiLR/Wlw/SMzCqjS+Lib+3tgRbzuRBr+6QFM8OLQFD1S3N2sIL5kQk8Tg==",
        "shasum": "1606b86002f34e4eb82e5299df06722efafa6fb4",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.6.tgz",
        "fileCount": 42,
        "unpackedSize": 127939,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe12CXCRA9TVsSAnZWagAAiIMP/i88PbUn+RzDlci3fvsY\nWamZjt0dKYg+TtjDEuj8bNc1EZ+98B3ak/fh5TbBJ6Hpyh2f8/kBFzcxs6ph\nEg+HODbV7YFDXoL+NevrqMIfgY60uXksNQuHVw2gPIWuNYDc1vp76Vxfcc+e\nE4qY80SAYsw6Se8X5iO0QH75Yi8tVCLONUQdTXW8HRT1tvdfh8Xdczc+pBZd\nn7sJ2qhdSOtBW+UGDKyyzRmx2zZoxRqWYVCORLpAb2r7zcHyvWBh5uxDn7+D\npScCUt+yyVKj6ZSSBNSXOxDZmOGkCUqTJN/kVIdaJ5k8F7QxF0SvfqWugnsb\nm7j93VJJERbtF/TYBT4lB9bGpLruCyeVqqi5ncQCysUSr8XLzIWTIfJ670eW\ng5pu2jLlAXrB19/oy2ftNBI2BgLJf/Ixg4HjdHCDWlalDAuXq8skNSZisPq8\nMuPxp6FB2RNd+e++TAMYmTnKrLf6pB9xIdOTbyu7M4OyYYUDrNSfO0/2PJdx\nGqFA1l2vThGEc6PLAfzGQ4rqnUrmyAFB/H9FrBEXnDfH29B6xbjwzltItYwF\nFO8I5zafmgj/Vg3hPDNtgbIhIFVxvfbLS8iyDhLyuCZLF9hBgQaoZwpWfwr8\nHlEbpuoAUPTXPZ4+J3xPJF0UCGw3abhi8L8wwSzpKqatSnsoYuelfTaxFFSL\nLON3\r\n=hOvZ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.6_1591173270674_0.1414362806402807"
      },
      "_hasShrinkwrap": false
    },
    "4.2.0": {
      "name": "enhanced-resolve",
      "version": "4.2.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.5.0",
        "tapable": "^1.0.0"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "istanbul": "^0.4.1",
        "lint-staged": "^8.1.0",
        "mocha": "^2.3.4",
        "prettier": "^1.15.2",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "yarn cover --report lcovonly"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "00a347d8bcf60ea296c1245e23052f1987c3687d",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.2.0",
      "_nodeVersion": "14.3.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-S7eiFb/erugyd1rLb6mQ3Vuq+EXHv5cpCkNqqIkYkBgN2QdFnyCZzFBleqwGEx4lgNGYij81BWnCrFNK7vxvjQ==",
        "shasum": "5d43bda4a0fd447cb0ebbe71bef8deff8805ad0d",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.2.0.tgz",
        "fileCount": 43,
        "unpackedSize": 90356,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe5/OoCRA9TVsSAnZWagAAdgsP/177HvjkAGfhHFSXmuPp\nJW8m509JEdPw/QV6RHJ2T+E4a5bd+1oRATwtQ3kj4057UNXL270OJNz6XttV\nMo4rzeBoMHJ5rw7pIlcEWZp/lFzgQTyeHyeT0KqYUALAmgbmG9xlRcajsS4F\nDlfUUFuYrCCvlqMwQUsFwRxMSCPlnqjNv3p3NM3yVZkt4UwcR4lFLOuUn5cB\nyabjqkxNW8EWCFVJYwyMY3d6HNimJk2Bwl2N7EKR2IlcDNmA7/pIbHjW8ICt\nTTU8ObKBOjNbQ3yawn2gAgXp0fhyxl+JtKlok6qNOtNbAcQzmlGOB6xwt04+\nLvhk0+G5ZTZxy9g6thz9Ez8wRfB/7sUSEmrRVBcpCjc6SlCYMmJuQRznEOFT\nI/hWfm0XCxK/MMzEFPK2yaaeJGA+LzyugwnjMawf4R37GJgIK9yJ3NHrRfvm\n7DDKqmpX7dG6d7HsilItH386nxD00YD/kKSyEufXOL+hdT4iK9Wp38WykX3C\nNU0QU1nF7+/hJDEiX1YpHr92OMkLBpjP3/PqkordPUdZ/yxovA/nCJhUCQOQ\nICmrwtysN661MzaOF3ulhMbxPDphpKcACKFy77MlDhgtroqeZpJ7RL0d6uC9\nG2VAAsHqnRri2QJ+FcmA1+xx6iCbM3UJWC9Hd2E+bB7dbW10U+tfFUzsU8ka\nr25+\r\n=4Tc/\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_4.2.0_1592259496227_0.17945711883834026"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.7": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.7",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "9b54561c64378c5e992cfea00832fa59295129ae",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.7",
      "_nodeVersion": "14.3.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-4r9mhIEedx7IsNgutSPyFtD0hKukbknr8Fuee36IXg9dYcAeDLb7l6LzBAeiDBgUKeFv+OgMSkCyp/SGCZ5Xag==",
        "shasum": "174f085396ac8edc734253f5b6aa9a05cb0d73b2",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.7.tgz",
        "fileCount": 42,
        "unpackedSize": 129230,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe6e0/CRA9TVsSAnZWagAAVQAP/A487FmCMLeelZEqZ84h\nDt//mko6RjkxqmkA3E/M1c0BRwcSdpO4jWJW7moajCxsiBYUZ74xItNFfwvt\nQyies6sOwDPZ0vbhC4BD3S/1NEjLKrfjm+iyjj8JND0aOSWWYOqo1GxDKUU8\na9LBhYjaSfTFg8ylHCnybYDdCb8M7bRR4MPBJJQF6p/WrULRj2OKdr8GyaAR\nX8NiURqhBOb5duP2bcO9qvbJNiywBirI9xlBnksA2J29iRpuiHXmlwfjoCPf\n/HjGibS8KRNLkXb1f3YgyD9qmW+W8MVenSEESRc5qSyoD9bwu6iRSBMu7LDh\nao4xnMl41dG/pNcCFTpEK1TQ65jbYKp7lImlu9lY3aA1guA8AHD2HmrWhjl0\nx4MFdy6G+o/Q08X5dA7MHxxWInHyHO4uBIahonTYXLqsU+OGkIKr1Atv4150\nG04AxKbkVHKur0F/akNkqO2RzHOsCcsLuOEOMaCj2UOHuegSIoK7/dyoktJh\np4szF+3prxhx9KUmAtpzew5rn5hfGGVYJcMV4WyIvmsHutfMGowtkaeclm/u\n9xpu9dZdbcLZlEUbjpkKI6HjncJcaNG44LVrCiXwnqrEOtnhnCV8UJJ2TPnP\noEH486T7ayIwIj02bxbwNSfw/caPc8VC5CNWjpaYr47hqQbRITIYPvJcZXvC\nQhnu\r\n=B9as\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.7_1592388927101_0.7378176644804126"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.8": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.8",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| roots            | []                          | A list of root paths                                                                                                                          |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "501df1b16181b2eb39d61a98d4574d3e49f1c4fc",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.8",
      "_nodeVersion": "14.3.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-6MteIR5h29V8UAsBVXkW7P2cAf+5p/c+Gu79xNCpBPt+hgKcJ0vujcX4vAiMGJjyq3SCHaY5N64C8HXwwRS3gQ==",
        "shasum": "f399920cb9f73350e61ab10bf2c7f36c37dbf032",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.8.tgz",
        "fileCount": 43,
        "unpackedSize": 131274,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfA5EDCRA9TVsSAnZWagAAXkIQAIRis8szB4JBwhasLf47\nay0WI3yvQ5pSUPxcdYE0V0jhhT7rmW3VczMucSrMq5Ik1ThIv+Vnc/yhk+x2\n1qiXCHLDhzsmSstd0JhDvgih8ZvQl9/q/wZc53XVQnuybpXDxEULdbRSglAy\njdCZttfN7IQ2ZvN4/chVsB5arA4CvYhNJ1AJPhBTM1p1XFSFwO+mXkh27vTr\nNJ1ewbLghBo7rxxd/tbsOCUekF6OtSYdHnRPBVH1ghMEIJOl4GVjIY2Ev51O\nv6AgP3xDogyCHPH/fABsbW6CiMn0ItGI6ws8/2N+jV14xPrlm5RT0G7odyWp\nD7/FZ7wO/bKm3yy42flY7Oe2QPAc+1I4cigALeSpxs0Pgc+1d/KzNveyA6hX\nQ48VIiP0fZavDYKELROX6wrObMyfWgMtCJ8vCcvrNUU+rzZcYmN99RBqoaFI\n0jXlvft9XH1euBtsjowl3XN0psv2QC5bAbyD+Y++iZevfnAwiv01bw4R6Ahc\nUcyfViJHu6avSAFnwjHOImWrJAjvvRuba+Uqk6ipLbOitaSy/0s7qEZy1ys6\nzWWGqr/cnq+/XUQ7jskGV8D2j4cdfNx7e+RWWsOAR95mdIFbbS6Q2ZOZ1XKt\nasdQ8LbP+peIQoT/s0BR/3TEEfi5VFr42iOWnSQyjdIxqkCLduK9PfUPDF8L\nPiwO\r\n=86ck\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.8_1594069250791_0.6200962266428656"
      },
      "_hasShrinkwrap": false
    },
    "4.3.0": {
      "name": "enhanced-resolve",
      "version": "4.3.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.5.0",
        "tapable": "^1.0.0"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://www.opensource.org/licenses/mit-license.php"
        }
      ],
      "devDependencies": {
        "codecov.io": "^0.1.6",
        "coveralls": "^2.11.6",
        "eslint": "^5.9.0",
        "eslint-config-prettier": "^3.3.0",
        "eslint-plugin-node": "^8.0.0",
        "eslint-plugin-prettier": "^3.0.0",
        "husky": "^1.2.0",
        "istanbul": "^0.4.1",
        "lint-staged": "^8.1.0",
        "mocha": "^2.3.4",
        "prettier": "^1.15.2",
        "should": "^8.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "main": "lib/node.js",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "eslint lib test",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "istanbul cover node_modules/mocha/bin/_mocha",
        "travis": "yarn cover --report lcovonly"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "e08f93671c59faca76ab2726faf0ca1e4bddbfa5",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@4.3.0",
      "_nodeVersion": "12.18.2",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-3e87LvavsdxyoCfGusJnrZ5G8SLPOFeHSNpZI/ATL9a5leXo2k0w6MKnbqhdBad9qTobSfB20Ld7UmgoNbAZkQ==",
        "shasum": "3b806f3bfafc1ec7de69551ef93cca46c1704126",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.3.0.tgz",
        "fileCount": 44,
        "unpackedSize": 91787,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfDszuCRA9TVsSAnZWagAA5AoP/0FMLtK1UCcqNODNVpZY\nBrNxKxg69Z2esxPfCucoj5at8YKpWmJ0+geNUU8kbuEiU+4bPvkmACHJHOU0\nXuHvuEYceSmOKKw7lGqefbvvgZ7ex6YlqApD5bR5LhpOEZwJ3PQVqKaasGwl\nQI7il5mH3aZJcl3PWPMDUWql14n2PBMNKjXbfAjHlG7dXUe+ywto0EdkRV7V\ndv8KXFDSzUdlaa7ctTu2lGtDdQnFjk8nTr4K3bIs2T5tb/+h7J8KuBQqpuq+\nzixqudHEmkZNYFz0VNqhhsru/WtqIb/WEKGtcmzSdkRURIDOYFcHMbS9d7xD\nLN6i73GierC/Rg8RvPfQLEwN7jMCMxGsSr9aZoqMTbweDXGFYny08+RnpcRp\nliWOc4rk3hIwOx9jTSjrOQkbHepgRekHfmFLaM1gvanyoCGh94LCl+qbm8mn\nRcon7o88Ed6nfFRpMwY76eGESUbm2hYCjj11vXJoK3kQBrBSeEh/Z1DbuckJ\nfrw8ERpTKafRXD7ZhOr65kBdzU9vsMz42v1A1QndQx0ubDZSUemLZfd2ByGk\nr34iz3OKt3OWqXJuPoU07Bd1GOy6SjtJxOlQnlMoosGaXkm2xagMPDyYMIr5\nnOoFXngja9xPKkFELGfQuorMHAXsW2RCMD6PtqzWHMNSqON9VH//fFgsdXV8\nVG2V\r\n=Ak8O\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_4.3.0_1594805486254_0.06428024845041014"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.9": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.9",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "8992d74a288729cd74c758d337a0dff421d82fc7",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.9",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-qySAWRlTNigaSuuwqqxwXH9krUSxxCWqcxKalBCaPg7ciZgiiEGc+y6kDsHDg2FvivmV7AuIBdQeX04Jk6ugaA==",
        "shasum": "a44e9ad9a0cf47591cc996daf0a30d83aaf54c2f",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.9.tgz",
        "fileCount": 42,
        "unpackedSize": 138538,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfEUjLCRA9TVsSAnZWagAAMEkP/1pTVDz3SSGp/gSuKt42\nF3TC9BfHuDB+uMrURJm/AoYJ6cKohOL8toYMqrGMvXiACY/yj9OR6Pv06mio\ngN66XoeKS8pdM4iaTIQLzLWj8hYkwu/1IwO29QhpokMlukZDXIBZkwbszFXE\nFlFR8v0IQbO4TwxKPG3LT7rdV8CngQoz9aPetWf9N8LpI8FOugJLcguzNO4+\nCXsPAxq7iA6hBWTu7fBhgkNc1eoDpSdvmnxmygFzQVHT7spUUjcO2Jgfan3f\nX1N6u+gy0s/1BXqTnI0hh5i+3wz0sfk/3sPRh5KO1fJY9OwEKaKQmSFMnu/A\nLHLK8vemFJzKO7VGGuWeOg6J9IN9yio3290oCV5QgMiSiLUiGGYo89nWU8Be\n0EUU5CJmCx4vL4WpZl72YNxlAAqAviwo0oS2d7JI22MbA8o5Id/w8vLNikaM\nJahoEUs5Zk015erKq8bhw0f+yVRLiDoSEMj6a0LYGTD/OqpEXkJYpv3XOTgA\n5kOkb/W73GaBoaSNESYLf3GPRhCJM06DOE2Li7X6Q3+ja3NDRco0HlVRK3J6\n3J34O1i1y2hxrVq6KcHS5iJFaxx6oTy5P+8kG0q92eLH7zycxdmHpHqW6crL\nJp4ODbYLCX96lBP6PMivw12gDVTVqe3vxZTIMQQEpOXWmshirU8qzgNgJTfj\nY/ws\r\n=sOAj\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.9_1594968267435_0.8357300358848814"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.10": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.10",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "84761ba8806fe7fb26e82f6b3b953f91045a79ef",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.10",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-vEyxvHv3f8xl7i7QmTQ6BqKY32acSPQ4dTZo8WRMtcqTDYH9YyXnDxqXsQqBLvdRHUiwl9nVivESiM1RcrxbKQ==",
        "shasum": "3907c034f8e59446dfa5a89a1fd73db29aa0f246",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.10.tgz",
        "fileCount": 42,
        "unpackedSize": 138624,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfEVgKCRA9TVsSAnZWagAAnQUP/iSgdtKQzzFKkTRuRC8k\nDbiGOSL1ndxOjH5Q2F8WwUVAUwBUtFDTSqny0dscOslD627Banfpy28VNtjB\nqgyscOJyjrMr76FP74ax8tWo5v61/oEBGViK5AFR9Kq4jBiR/qM0IBCwgDSI\n/9YTAr1+BuWViJfkBLxdtqrir9h0c5Hz/D0VA2RyjuwcueYo9IwAWKeJbv1M\n2LcAHo9k0xTmAzkmPoA+ttzdhLCY0zlOz6+4IB9X1AKb9WHBh4ZMXsFFu/cc\naFLEjUxt3iIKGuN3WogWA/9IKDvoAeUqssno1laCjI6E43jI753797H4K5+d\nWRveJ9JTuyZo+f0gNUgAZU3K0zPLzilFDFc/UyTLx/oxrX4BebaLGtMpf3gO\nMypyXHKjPAgBeREPVcu1dxyN6FKfb/DjMFeXqlUXcIcLLSmQrvQeNkkX9urr\nTEJAlAqYc/CXKGf4Qg3XxzH95JbNHOtG5XtyJNljZBD6O78XDGJp83NZ4WjZ\n9uqncojLIR6yF/2prDyMJ5E4h1Jdl+JHW5uE3STHLI0IkSVJKFGm4WAJunrz\nYdeHSOwnrSqjskfCSrRGozy44z2sh1NZqcputOqJuFnOORnM+DZCBgMNaO7J\n25jl2i9Rvg33W3UwWt+1A2B1rv1LJ0CdFCwgM8jpbQ9NrzPFGy7F+D0XfuTq\nmkIs\r\n=jXwe\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.10_1594972169673_0.5855339080638984"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.11": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.11",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "151150fb5a9e9f4a212794951c38bb9194830874",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.11",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-kIINkJKz5csnSKnASQh4zdtY3OxVdiZkQZYPteIg6qCHC6L3sy9wcLMXZBUHdQQ2Vv0920DclXqs2jyAI+FQQQ==",
        "shasum": "f5885b17bca8e04feb42e7f22e8706cae3827e54",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.11.tgz",
        "fileCount": 44,
        "unpackedSize": 149972,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYOC5CRA9TVsSAnZWagAAsx0P/2DGLGEbGLZ6+XUj37FE\nbeX+9/LXGGo8Gvsyw43UvrB/tJvtLwEnXBNJ3+7c6sqgQVGdHTQ5mwG6hEdk\npQjOqElBMTTJoscRVR5+GIyNnk6zYmcaRvZGpltoAzVus8opyNC3dEaGFmJr\nOtBHOL/BmWHyLr+HF3dyNEbn6rzEQy7HCuSsoN7SPDf+GNXQaJciDk67J6MZ\naZKdNtKKkiZgUh/WuzhvN8kZk4gNviAUgumNjcnzav6D+j+snwoi3g+CnYRe\nBgQkNWN//18JP/2r7dtPGtfuvMddW+fnkV7l2EygUHDEXNr2bNCIRsRIkphX\nLYc8ZcmxVJlyf4q81Z5x9TSdQ/W7ImnmGlBNwud1N3SFq1ofiuKH0gL8iV2h\nz4vHbiCP15KpfO93Bg6XvKwSrU07dNi9nNq0xEz8sqzyhNGbWzKvxnBytjjq\npeHtyBGtuVHnvvASzTfPeWFGg2Bw5MicJ49jkIkjErxexH/TLKm4cL3prIiU\n1E7EisMQbDIlh4jz3cEzOe7de+fcBTENfeOFXrC4blP2wywlCi/6lwjBkKiX\nr1KebOgbYvVWKChHzOSTrea9rsorg2DSlGo8cHHQJw4R/FK+Az2Gy/Vqwq8J\ntVI12s810uD10y0yPcH3qaxHIPbr9H/B+ZkAvemHnYJIAM5Wn7w+d3TfxHk2\nnTCA\r\n=F4EN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.11_1600184504774_0.5664054140777495"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.12": {
      "name": "enhanced-resolve",
      "version": "5.0.0-beta.12",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "tapable": "^2.0.0-beta.10"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.7.7",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-jsdoc": "^22.0.0",
        "eslint-plugin-node": "^11.0.0",
        "eslint-plugin-prettier": "^3.1.2",
        "husky": "^1.2.0",
        "lint-staged": "^8.1.0",
        "memfs": "^2.15.4",
        "mocha": "^7.1.0",
        "nyc": "^14.1.1",
        "prettier": "^1.15.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.6.0",
        "typescript": "^3.8.3"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
      "readmeFilename": "README.md",
      "gitHead": "c200a08a18e700c4d7d8fecdf460b8b1930c75fc",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0-beta.12",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-lEjGWKw3CAvoCZcXP2QBf74D7azAqSop2uOSN2nqOiqmy9h4F3Ci2OaGkxfifrnltv7MAtQApWycZOmzGwDovg==",
        "shasum": "ddc2eab710a5f973e1350fd3c0f721df550ec59b",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.12.tgz",
        "fileCount": 44,
        "unpackedSize": 149949,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYaEdCRA9TVsSAnZWagAAHaAQAIZ6yJ+hN2WI0JnCEDT/\nI7khEShiRqrdgxgKB43srTMorCs82zABLhqY19Tv71FlIdnTrK1swqxVtFAS\nKyqoRcsDoPCny+s+vwyUVS4jYcPd2l3iOyvSZfyAoUN8pcquMvIdVLbTEWgw\nmxCy84YsBXrPVYDDXrIr4lxG+Y9KycUenqLP+7ZuOI9PBGWTTfB2Dlt032kW\nzonM5BAXC9l1hMBc44MzdgjEABI2nr8bpnY1c91JlqvAOWWGWmuEwi7bBYp3\nzGAq31gsiWT8Lz2SQ5JdR1tG2410c+j8Dx4nWT+MD9JjAyKKzm60XQrn8g1m\n/lKL87nQZxdjwxUpi96dbjSAm9WC/1o/dnTI0KS+bMCwGnN9zeHrCIJ6ov2S\nxRSnxmT3wowWgW2qRmAcW77Nk2OxbHgWECLvRKb8P4yTyf4ysb+HpOxWu8xA\nGBVnRca+nYIrDjLivJmQgaVACDxse5aStVQDIlwkTVt5U9ywNaaMwYbeB9U3\nTKpWdbteooiJnjxehziPnSjH0Ae8WnJa5o0UlTMmviLn2WbPbkbFVGyHYaGo\nuw4/ANIIm4hldNBcZznAu3ClP6zB8PIY3Op3OkF7YIvNPjjzLNoapeTypRDn\n5qtfJB9UBI3Rl7TBlclXTeKbDwqPxIk2GUmJAnvH32ie7AmVR5K8gydTVtXm\n+Oef\r\n=fguP\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0-beta.12_1600233756621_0.6228417100461019"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0": {
      "name": "enhanced-resolve",
      "version": "5.0.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.0.0"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^8.0.3",
        "@types/node": "^14.11.1",
        "eslint": "^7.9.0",
        "eslint-config-prettier": "^6.11.0",
        "eslint-plugin-jsdoc": "^30.5.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-prettier": "^3.1.4",
        "husky": "^4.3.0",
        "lint-staged": "^10.4.0",
        "memfs": "^3.2.0",
        "mocha": "^8.1.3",
        "nyc": "^15.1.0",
        "prettier": "^2.1.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.8.0",
        "typescript": "^4.0.2"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "adfbc74e4122d0b736d47b13ad3a824e0ce0a913",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.0.0",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-6F037vvK16tgLlRgUx6ZEZISMysNvnnk09SILFrx3bNa1UsSLpIXFzWOmtiDxf1ISPAG6/wHBI61PEkeuTLVNA==",
        "shasum": "4737e6ebd4f2fd13fe23f4cec9d02146afc2c527",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.0.0.tgz",
        "fileCount": 44,
        "unpackedSize": 150303,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfY/Z+CRA9TVsSAnZWagAALRcP/0QBQECw2BLrvAybAFap\n7EdKGwgC2tScvgm5wTcwfyAxYxgRuh4pACEjU/w8I8LjUtnUPNQP81qhCRwm\nPw4R7qJ672/+MfXWhVCPGSti7b8QmAVUNicNYcmRbY6IUQNeq7sMF11CU2qZ\nXUnzT0ga1UoTDgXe+rOU7b/H+XVpuv7eCWoe4uLHLiB0LBUzgrrkw6pPqI0e\np7tCwJ+TqUX/9XfW3m/9Z4HpagG5HfybdrT22e9v9yIXNNm/Dv+e7Cdb335l\nDvmx4dWcz8EwCoJVxOIVvdYBGKzV/hJbOGZpX8Pjj6yG0xZBsaQX+lzyh1z+\n/2/1A70WN100eQCq8Z+R3zF843gw3mi5Y1FEiarSr5KEOijy6upfA6zu0ODa\nOaiighyLvLWHfPwkjdbps/XEmv8Y+ls5vgsbPTZrUynET+2faNX9hSAReRlT\nHy8v08BeBOBHNhw8iKpe9Bgv8hUHQ0Mex2K3LI3HS3HdHSn2WyCOuoENzOP4\nP4/E/ORBUmQCMrRsoujdiNGmiSLSCaFzbHY4cNsiMuPE0gH90w8lkRFenQk3\nDgE3uwNO3yR3mwstcmT1CZXTfcF3NoHbwCZMs9qWZlfw8PAuZ2/DPJwZYsIh\nDNv9+zFhkWDSCwaSNPb9pTl10JsXg+OlMR+wT2XesZHwmcVPNlhTR0+Ajhjs\nos9z\r\n=vYAG\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.0.0_1600386686325_0.027036706647099562"
      },
      "_hasShrinkwrap": false
    },
    "5.1.0": {
      "name": "enhanced-resolve",
      "version": "5.1.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.0.0"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^8.0.3",
        "@types/node": "^14.11.1",
        "eslint": "^7.9.0",
        "eslint-config-prettier": "^6.11.0",
        "eslint-plugin-jsdoc": "^30.5.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-prettier": "^3.1.4",
        "husky": "^4.3.0",
        "lint-staged": "^10.4.0",
        "memfs": "^3.2.0",
        "mocha": "^8.1.3",
        "nyc": "^15.1.0",
        "prettier": "^2.1.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.8.0",
        "typescript": "^4.0.2"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "4a3cc76a067dce2125889b06d8d9624076cb3726",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.1.0",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-EM3ZMRrprkvO44dVdDRGI9pNPY1Vkw15lT/cQk1IwlbcI7Tpc3la8y1FQCuilWQ8qvlq+n19abwPBjVLnld21A==",
        "shasum": "44cbf2242876ae9044dc32f7207c23c0dd3acdc1",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.1.0.tgz",
        "fileCount": 44,
        "unpackedSize": 151061,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfcikPCRA9TVsSAnZWagAACAsP/3Q1D374m3KM3qkA587O\nscVGTUtGGQPsDLF7/ARFiH/vropHXDzBPUVygre01A7jXo+1VFLRSPkSjH6F\nzh97Nt3+CtjlNB6cB1CCO04nBhnhF0aFXpH8sj8ExpJmD3rpoQZGyTMHoSpa\n6OMIei6sGTcXof4C5hN8IeTBQUzNgL6pws3W4ZVQkWCAHU7gDwGoIftelpSE\nSOXtprjC+ChwOZiEWypeEznnqpbIdTRsDjkQi+Mta0XrHOGlwd4rcYcr6Tly\nNCQtZn43zBmneFaGBP+HANoIvhv9VhpIdqxiRMiIfjORzgyfINEwQ9tS9j/q\nLOo16U0XHRenNTUNsDeB3oH+E88YDVXtxCTss4faWUOjK3ECtbwBMscKtiuu\n29aIcTd31RDziHE9LjN7B56XospdDrdJZRnENlKHIEBfPgoSRhpCyQ9cKVwl\nD6ruKDUik/0RUcPBKvX3KARws7QTq92hkLB1voILwuXs44wBqa+6xQZ27UJd\n0BK4Jo8/LNamhILYfEtitgZgJZWq67ABcWMA6weLK3WYXbtLBaoxpj6Rflnh\nRTfzqAG9Qx2yVpRMVzjKnOPiEBSoI6aon8VqcUC4gU+T0OomRBWIUo7r59R8\npvvsEB5BSvuhM8axoxlNHMvPloZnQqtYvlaV9SPbWfKDzKfjHpSFCLC7gRj4\nxv6N\r\n=DY9F\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.1.0_1601317135070_0.8873573261225931"
      },
      "_hasShrinkwrap": false
    },
    "5.2.0": {
      "name": "enhanced-resolve",
      "version": "5.2.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.0.0"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^8.0.3",
        "@types/node": "^14.11.1",
        "eslint": "^7.9.0",
        "eslint-config-prettier": "^6.11.0",
        "eslint-plugin-jsdoc": "^30.5.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-prettier": "^3.1.4",
        "husky": "^4.3.0",
        "lint-staged": "^10.4.0",
        "memfs": "^3.2.0",
        "mocha": "^8.1.3",
        "nyc": "^15.1.0",
        "prettier": "^2.1.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.8.0",
        "typescript": "^4.0.2"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "0001f80dacf033ac4a0e690b2766e0965c458266",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.2.0",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-NZlGLl8DxmZoq0uqPPtJfsCAir68uR047+Udsh1FH4+5ydGQdMurn/A430A1BtxASVmMEuS7/XiJ5OxJ9apAzQ==",
        "shasum": "3db3307a608f236f33aeea79303d32915792cbab",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.2.0.tgz",
        "fileCount": 44,
        "unpackedSize": 154061,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfdDZlCRA9TVsSAnZWagAAIIsP/inIeropmHRnK3qeLVX3\nzW+bG+JxI0L1rSbxrGnKlsk7CIpvRT62YUrUX/rv/sKILRN4OZEjjZm6SRdq\nyAIBFFbIpjf+YFi0WyMR0k0K/1o1L1C9T+t+uHiSHsUs5fooBMU6CDyH1Ss4\n+6y/vrE9/ytufW6U4BdSZs+qe2UP8013ErjRakiAlJIS9AFkcfz0x323vRTU\nVhooCBAYpUOlduFf2RWxbEmiMMGRftgTeAAh4QhZhN1Su7z/GD5bzlcuDX+U\nZJwy7YSIilXEQAnOMCF0aMn+CIq0Pb4VciCWNHsdoIuiIXlsXLx6thinbkN9\nuR4WVugdeWDes6Mwn1IkTVNFj53khzCBrsnF9eFRY0rEVo37dGVT7NSwij1z\nhB+sAZvSrPM8HZZP3Q6q/rBM6HnAQJbFFd1J1l/yLA3bpZxCFiWOaeAn9AIc\n0ZIqAedr+XmDj1+0l3qSCAakoxyGqoyB1lkKR8bpKnxRy5E2RD+FzKDN+rvI\naeGPdYpZ74gX5Wxb50gEZJJj/ZuxZIxTANc3dTFhCZreU2bbW7cnqMQijTQ9\n1WD7fwK6RXs//UVIZy3omRa8SemkoVlTOfODpyZgp4PuWMx78i3vMHH72MmH\nzdZQ7h+bklrqbWXvI6cM5PyyuUQ+3X8Xcj452ECDCmur3PLXfnx0nSTv2pYH\nw/em\r\n=tHRa\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.2.0_1601451621238_0.03636911020761091"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0": {
      "name": "enhanced-resolve",
      "version": "5.3.0",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.0.0"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^8.0.3",
        "@types/node": "^14.11.1",
        "eslint": "^7.9.0",
        "eslint-config-prettier": "^6.11.0",
        "eslint-plugin-jsdoc": "^30.5.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-prettier": "^3.1.4",
        "husky": "^4.3.0",
        "lint-staged": "^10.4.0",
        "memfs": "^3.2.0",
        "mocha": "^8.1.3",
        "nyc": "^15.1.0",
        "prettier": "^2.1.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.8.0",
        "typescript": "^4.0.2"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "0f51a8cf62b47cde4f57977cf4a205d832f8da69",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.3.0",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-EENz3E701+77g0wfbOITeI8WLPNso2kQNMBIBEi/TH/BEa9YXtS01X7sIEk5XXsfFq1jNkhIpu08hBPH1TRLIQ==",
        "shasum": "14be504e14ad58e9821a311ea6a9037c716786d9",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.3.0.tgz",
        "fileCount": 44,
        "unpackedSize": 154057,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfjs9qCRA9TVsSAnZWagAA1YEP/jTM9CaCeuNHdX3hcYzK\n8LFKXADtwt0H266kdiwJIj6DzAs+V0Oyw0R/4rZPOC158Kb/dhkWdiuUmVbW\nElacRc453591JNrlxhfKsWXaXwzZtt+WkF0OZuWL37q9Wz9kSLOt5mp7KoAA\ntgvZnEH2K7yr8aHFrWpzFmyz4R68NSibIeoWgWCnRKteFqYFrU6+BQSaZMig\nTWktXEd4L92aYCwv2ukgHig/ZJjyojAJbeCkUjVhCgRfoAjjdwIA7B/cSd+Q\n1rdtwyEtCwFU72Q793Rgo6BjufFidwp7wU6id9CymSoE7lr8neAdR2T9CNXT\nrks8+iWcLqqygMhN7AweENwggQlwPZylXXAAyLlytVaCfALcOTP7BLV41NFe\nU3LZsR93YT8sLNbFDBfhTY2E+kWj51ETMyeL24HPNZ6owjtbKhR49aioThWK\ng2nQC//KKJcKnkcBdcC/lJn3GMi2N1oeD33R6+HKI+OFXONDNfv9lDcQcrdD\nHmJ5Gez/R3hcFMtplFyRBUm6YRCfMWjBWJiVMP4fztisUsLuuNRDD0ymKWKx\nMInKNExJjwkXtFg+UOFTTHF0Aq0yKgKn9vh8f88eXepiUdUXELoeZyD88mRM\nn6Yi1FKMY7+BbwTIZCg3xAHhORCyqEkkUAVlLBrz0UmLLc7deqjVdJ/3cmH2\npssB\r\n=wqvI\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.3.0_1603194729989_0.27200953940662154"
      },
      "_hasShrinkwrap": false
    },
    "5.3.1": {
      "name": "enhanced-resolve",
      "version": "5.3.1",
      "author": {
        "name": "Tobias Koppers @sokra"
      },
      "description": "Offers a async require.resolve function. It's highly configurable.",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.0.0"
      },
      "license": "MIT",
      "devDependencies": {
        "@types/mocha": "^8.0.3",
        "@types/node": "^14.11.1",
        "eslint": "^7.9.0",
        "eslint-config-prettier": "^6.11.0",
        "eslint-plugin-jsdoc": "^30.5.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-prettier": "^3.1.4",
        "husky": "^4.3.0",
        "lint-staged": "^10.4.0",
        "memfs": "^3.2.0",
        "mocha": "^8.1.3",
        "nyc": "^15.1.0",
        "prettier": "^2.1.2",
        "should": "^13.2.3",
        "tooling": "github:webpack/tooling#v1.8.0",
        "typescript": "^4.0.2"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "main": "lib/index.js",
      "types": "types.d.ts",
      "homepage": "http://github.com/webpack/enhanced-resolve",
      "scripts": {
        "lint": "yarn run code-lint && yarn run type-lint && yarn run special-lint",
        "fix": "yarn run code-lint-fix && yarn run special-lint-fix",
        "code-lint": "eslint --cache lib test",
        "code-lint-fix": "eslint --cache lib test --fix",
        "type-lint": "tsc",
        "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types",
        "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write",
        "pretty": "prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"",
        "pretest": "yarn lint",
        "test": "mocha --full-trace --check-leaks",
        "precover": "yarn lint",
        "cover": "nyc --reporter=html node node_modules/mocha/bin/_mocha",
        "pretravis": "yarn lint",
        "travis": "nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint --cache"
        ]
      },
      "repository": {
        "type": "git",
        "url": "git://github.com/webpack/enhanced-resolve.git"
      },
      "gitHead": "d6807b553dc7e3157746b57a82cb238cd5e58cee",
      "bugs": {
        "url": "https://github.com/webpack/enhanced-resolve/issues"
      },
      "_id": "enhanced-resolve@5.3.1",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-G1XD3MRGrGfNcf6Hg0LVZG7GIKcYkbfHa5QMxt1HDUTdYoXH0JR1xXyg+MaKLF73E9A27uWNVxvFivNRYeUB6w==",
        "shasum": "3f988d0d7775bdc2d96ede321dc81f8249492f57",
        "tarball": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.3.1.tgz",
        "fileCount": 44,
        "unpackedSize": 154460,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfktD5CRA9TVsSAnZWagAABToP/2NxXHHtXlDBrSF8Vhjf\nFEwRNuojyHPeh3HewqY1X/qd0U7Pw9QYwTx0lqqNMtHD82nDFhyn+VY52HeB\n9QiSuGc+g2MNCpDOFKiaW+5dwPD1ZkubSE/4fu9clIVHRcF0PpNRkzGD+qtz\nJgZ32yhbE+Dlpp3M3H8kJqw9Qh+RQdnXWjEiIm87WQ1cbRvaeO9o+EUr9but\nZJkhDDz3kdjbUGCN7nZcj0eje+vwUhB6O6CPtIgqhkGBrGr54jJl7HV0UQ7h\ncG96YlxQjSCti/oIFTwAYzafkndj+Y/Ma8EkyBoueBrKyOA5xvE61KFm/iLb\n+BVpAud1PZY7yh/y9zgb1x48v/MhcMQfK2vaFYLJ1DDOSPV5HlaqX0SZ20b3\nMXMVa5ISgAG/GeJU+U8XoWDYdTFBYFrDX54jOYdxYHC1ZYNQq+pxXA88IQe4\nMs/+MWr9kk+JJaCcQzx0amyjXMqy0P0Iav8RlfZtD/4O0sl+MfwRmzybBFxA\nMyE29umUpXqDvF8KTqLpg/xFyfPMVXhTsXq9mqBUbidRxLQACkqUn/jbyMVK\nqDovST4IW0yNgZqP0WPHJk0kyP5GPP77ey7ypDXVhJ2o2Kco/1DBOp+29tur\nYJbprZK0WlpgHs19tMMLSS/J3vJ3Pr/OcWBbQy2Y4jbJyjXL+jrV9vjttGn2\nWDA0\r\n=bsYl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "maintainers": [
        {
          "name": "bebraw",
          "email": "bebraw@gmail.com"
        },
        {
          "name": "sokra",
          "email": "tobias.koppers@googlemail.com"
        },
        {
          "name": "jhnns",
          "email": "mail@johannesewald.de"
        },
        {
          "name": "thelarkinn",
          "email": "sean.larkin@cuw.edu"
        }
      ],
      "_npmUser": {
        "name": "sokra",
        "email": "tobias.koppers@googlemail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/enhanced-resolve_5.3.1_1603457272857_0.6095943612012926"
      },
      "_hasShrinkwrap": false
    }
  },
  "readme": "# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| preferRelative   | false                       | Prefer to resolve module requests as relative request and fallback to resolving as module                                                                 |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Escaping\n\nIt's allowed to escape `#` as `\\0#` to avoid parsing it as fragment.\n\nenhanced-resolve will try to resolve requests containing `#` as path and as fragment, so it will automatically figure out if `./some#thing` means `.../some.js#thing` or `.../some#thing.js`. When a `#` is resolved as path it will be escaped in the result. Here: `.../some\\0#thing.js`.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "time": {
    "modified": "2020-10-23T12:47:55.473Z",
    "created": "2012-08-13T14:52:09.649Z",
    "0.2.0": "2012-08-13T14:52:12.474Z",
    "0.2.1": "2012-08-13T15:08:09.344Z",
    "0.2.2": "2012-08-13T15:24:29.055Z",
    "0.2.3": "2012-08-23T16:41:32.834Z",
    "0.2.4": "2012-09-13T10:03:08.611Z",
    "0.2.5": "2012-09-24T13:27:20.110Z",
    "0.2.6": "2012-09-24T13:29:10.026Z",
    "0.2.7": "2012-09-24T13:36:26.294Z",
    "0.2.8": "2012-09-25T17:17:50.406Z",
    "0.2.9": "2012-09-26T09:33:15.397Z",
    "0.3.0": "2012-10-27T00:18:47.923Z",
    "0.3.1": "2012-10-30T18:54:15.926Z",
    "0.4.0": "2012-10-31T12:17:03.703Z",
    "0.4.1": "2012-11-01T23:26:29.972Z",
    "0.4.2": "2012-11-06T00:38:05.522Z",
    "0.4.4": "2012-11-06T10:21:51.065Z",
    "0.4.5": "2012-11-06T11:02:38.971Z",
    "0.4.6": "2012-11-12T21:10:11.170Z",
    "0.4.7": "2012-11-13T23:00:56.904Z",
    "0.4.8": "2012-11-19T11:24:12.005Z",
    "0.4.9": "2012-11-22T14:49:38.078Z",
    "0.4.10": "2012-11-23T21:58:18.767Z",
    "0.4.11": "2013-01-21T08:05:34.762Z",
    "0.4.12": "2013-01-21T08:14:41.526Z",
    "0.5.0": "2013-02-01T07:30:49.886Z",
    "0.5.1": "2013-02-04T09:43:58.930Z",
    "0.5.2": "2013-02-04T12:40:13.372Z",
    "0.5.3": "2013-02-13T14:17:51.862Z",
    "0.5.4": "2013-02-17T09:28:36.702Z",
    "0.5.5": "2013-02-19T12:49:24.501Z",
    "0.5.6": "2013-02-19T12:54:07.144Z",
    "0.5.7": "2013-02-20T20:40:22.399Z",
    "0.5.8": "2013-02-23T23:20:17.447Z",
    "0.5.9": "2013-05-12T20:33:37.853Z",
    "0.5.10": "2013-05-13T12:20:12.199Z",
    "0.5.11": "2013-07-04T09:58:27.634Z",
    "0.5.12": "2013-07-05T06:05:07.452Z",
    "0.5.13": "2013-10-14T20:13:21.584Z",
    "0.5.14": "2013-11-08T08:28:17.723Z",
    "0.5.15": "2013-12-02T08:02:35.934Z",
    "0.6.0": "2014-01-10T08:09:23.100Z",
    "0.6.1": "2014-01-21T14:00:08.422Z",
    "0.7.0": "2014-02-11T11:13:33.552Z",
    "0.7.1": "2014-02-17T11:48:07.671Z",
    "0.7.2": "2014-02-19T20:28:19.621Z",
    "0.7.3": "2014-03-11T17:33:42.579Z",
    "0.7.4": "2014-04-18T08:42:17.561Z",
    "0.7.5": "2014-05-29T20:11:17.868Z",
    "0.7.6": "2014-08-12T12:50:50.304Z",
    "0.8.0": "2015-01-16T23:21:48.693Z",
    "0.8.1": "2015-01-17T10:42:57.796Z",
    "0.8.2": "2015-01-17T16:19:11.559Z",
    "0.8.3": "2015-01-17T20:06:07.351Z",
    "0.8.4": "2015-01-21T10:06:55.661Z",
    "0.8.5": "2015-04-08T19:17:50.725Z",
    "0.8.6": "2015-05-03T21:05:43.435Z",
    "0.9.0": "2015-07-23T21:15:20.669Z",
    "0.9.1": "2015-10-21T22:48:49.269Z",
    "2.0.0": "2016-01-03T16:53:55.950Z",
    "2.0.1": "2016-01-03T20:20:26.328Z",
    "2.0.2": "2016-01-03T20:35:30.937Z",
    "2.1.0": "2016-01-19T23:36:29.542Z",
    "2.2.0": "2016-01-26T16:51:02.680Z",
    "2.2.1": "2016-01-26T18:19:26.404Z",
    "2.2.2": "2016-02-04T22:32:33.290Z",
    "2.3.0": "2016-09-07T16:08:09.618Z",
    "3.0.0": "2016-12-06T17:36:23.072Z",
    "3.0.1": "2016-12-14T12:16:48.951Z",
    "3.0.2": "2016-12-15T23:47:26.030Z",
    "3.0.3": "2017-01-11T10:09:07.760Z",
    "3.1.0": "2017-02-03T11:46:58.569Z",
    "3.2.0": "2017-07-01T12:12:58.750Z",
    "3.3.0": "2017-07-01T15:07:54.524Z",
    "3.4.0": "2017-07-24T08:03:01.181Z",
    "3.4.1": "2017-07-24T12:34:32.659Z",
    "4.0.0-beta.1": "2017-11-29T15:29:11.756Z",
    "4.0.0-beta.2": "2017-11-30T07:53:08.822Z",
    "4.0.0-beta.3": "2018-01-04T16:12:59.761Z",
    "4.0.0-beta.4": "2018-01-04T19:57:51.068Z",
    "4.0.0": "2018-02-22T08:01:57.771Z",
    "4.1.0": "2018-06-28T12:49:05.693Z",
    "5.0.0-beta.0": "2019-07-04T20:48:11.900Z",
    "5.0.0-beta.1": "2019-07-08T14:19:15.682Z",
    "5.0.0-beta.2": "2019-07-09T16:36:03.175Z",
    "5.0.0-beta.3": "2019-08-16T09:42:44.566Z",
    "4.1.1": "2019-10-08T12:34:54.521Z",
    "5.0.0-beta.4": "2019-11-05T22:00:06.458Z",
    "5.0.0-beta.5": "2020-05-22T20:00:21.358Z",
    "5.0.0-beta.6": "2020-06-03T08:34:30.829Z",
    "4.2.0": "2020-06-15T22:18:16.349Z",
    "5.0.0-beta.7": "2020-06-17T10:15:27.275Z",
    "5.0.0-beta.8": "2020-07-06T21:00:50.906Z",
    "4.3.0": "2020-07-15T09:31:26.421Z",
    "5.0.0-beta.9": "2020-07-17T06:44:27.564Z",
    "5.0.0-beta.10": "2020-07-17T07:49:29.801Z",
    "5.0.0-beta.11": "2020-09-15T15:41:44.938Z",
    "5.0.0-beta.12": "2020-09-16T05:22:36.854Z",
    "5.0.0": "2020-09-17T23:51:26.423Z",
    "5.1.0": "2020-09-28T18:18:55.286Z",
    "5.2.0": "2020-09-30T07:40:21.435Z",
    "5.3.0": "2020-10-20T11:52:10.123Z",
    "5.3.1": "2020-10-23T12:47:52.995Z"
  },
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "readmeFilename": "README.md",
  "homepage": "http://github.com/webpack/enhanced-resolve",
  "users": {
    "xueboren": true,
    "akinhwan": true
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/webpack/enhanced-resolve.git"
  },
  "bugs": {
    "url": "https://github.com/webpack/enhanced-resolve/issues"
  },
  "license": "MIT"
}
